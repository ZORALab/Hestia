{{- /*
Copyright 2022 "Holloway" Chew, Kean Ho <kean.ho.chew@zoralab.com>
Copyright 2022 ZORALab Enterprise <tech@zoralab.com>


Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at

                 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License.
*/ -}}
{{- /* INPUT PARAMETERS */ -}}
{{- /* . = Page data in Hestia Structure */ -}}
{{- /* .URL.Current = Current Page URL. */ -}}
{{- /* .URL.Base = Current Page's Base URL. */ -}}
{{- /* .Formats.Current.Extension = Current Page's Format File Type. */ -}}

{{- /* .Input.URL = given URL in any form for synthesis. (string) */ -}}
{{- /* .Input.Format = given output format for synthesis. (optional,string) */ -}}
{{- /* .Input.Content = given .Inner content (optional,string) */ -}}
{{- /* .Input.Rel = given rel= attribute. (optional,string) */ -}}
{{- /* .Input.Lang = given langauge for synthesis. (optional,string) */ -}}
{{- /* .Input.Onload = given onLoad= attribute. (optional,string) */ -}}
{{- /* .Input.Target = given target= attribute. (optional,string) */ -}}
{{- /* .Input.Download = set URL to be downloadable. (optional,bool) */ -}}
{{- /* .Input.ID = given id= attribute. (optional,string) */ -}}
{{- /* .Input.Class = given class= attribute. (optional,string) */ -}}




{{- /* prepare working variables for this function */ -}}
{{- $Page := partial "Hestia/functions/data/Clean" . -}}
{{- $dataList := dict -}}
{{- $console := dict -}}
{{- $ret := false -}}




{{- /* process the .URL */ -}}
{{- $ret = merge . (dict "Input" (dict "Query" ".Input.URL")) -}}
{{- $ret = partial "Hestia/functions/data/Get" $ret -}}
{{- if not $ret -}}
	{{- $console = printf ".URL: missing URL.\n" -}}
	{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
	{{- $ret = "" -}}
{{- end -}}

{{- $ret = merge $Page (dict "Input" (dict "URL" $ret)) -}}
{{- $ret = partial "Hestia/functions/data/url" $ret -}}
{{- if $ret.Console -}}
	{{- $console = printf ".URL: %s" $ret.Console.Message -}}
	{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $dataList = merge $dataList (dict "URL" $ret.Output) -}}




{{- /* process the .Format */ -}}
{{- $ret = merge . (dict "Input" (dict "Query" ".Input.Format")) -}}
{{- $ret = partial "Hestia/functions/data/Get" $ret -}}
{{- if not $ret -}}
	{{- $ret = "" -}}
{{- end -}}


{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
{{- $ret = partial "Hestia/functions/string/Init" $ret  -}}
{{- if $ret.Console -}}
	{{- $console = printf ".Format: %s" $dataList.Console.Message -}}
	{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $ret = partial "Hestia/functions/string/TrimWhitespace" $ret.Output -}}
{{- if $ret -}}
	{{- $ret = index $Page.Formats.List (upper $ret) -}}
{{- end -}}
{{- if not $ret -}}
	{{- $ret = $Page.Formats.Current -}}
{{- end -}}
{{- $dataList = merge $dataList (dict "Format" $ret) -}}




{{- /* process the .Content */ -}}
{{- $ret = merge . (dict "Input" (dict "Query" ".Input.Content")) -}}
{{- $ret = partial "Hestia/functions/data/Get" $ret -}}
{{- if not $ret -}}
	{{- $ret = "" -}}
{{- end -}}


{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
{{- $ret = partial "Hestia/functions/string/Init" $ret  -}}
{{- if $ret.Console -}}
	{{- $console = printf ".Content: %s" $dataList.Console.Message -}}
	{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $ret = partial "Hestia/functions/string/TrimWhitespace" $ret.Output -}}
{{- $dataList = merge $dataList (dict "Content" $ret) -}}




{{- /* process the .Rel */ -}}
{{- $ret = merge . (dict "Input" (dict "Query" ".Input.Rel")) -}}
{{- $ret = partial "Hestia/functions/data/Get" $ret -}}
{{- if not $ret -}}
	{{- $ret = "" -}}
{{- end -}}


{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
{{- $ret = partial "Hestia/functions/string/Init" $ret  -}}
{{- if $ret.Console -}}
	{{- $console = printf ".Rel: %s" $dataList.Console.Message -}}
	{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $ret = partial "Hestia/functions/string/TrimWhitespace" $ret.Output -}}
{{- $dataList = merge $dataList (dict "Rel" $ret) -}}




{{- /* process the .Target */ -}}
{{- $ret = merge . (dict "Input" (dict "Query" ".Input.Target")) -}}
{{- $ret = partial "Hestia/functions/data/Get" $ret -}}
{{- if not $ret -}}
	{{- $ret = "" -}}
{{- end -}}


{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
{{- $ret = partial "Hestia/functions/string/Init" $ret  -}}
{{- if $ret.Console -}}
	{{- $console = printf ".Target: %s" $dataList.Console.Message -}}
	{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $ret = partial "Hestia/functions/string/TrimWhitespace" $ret.Output -}}
{{- $dataList = merge $dataList (dict "Target" $ret) -}}




{{- /* process the .OnLoad */ -}}
{{- $ret = merge . (dict "Input" (dict "Query" ".Input.OnLoad")) -}}
{{- $ret = partial "Hestia/functions/data/Get" $ret -}}
{{- if not $ret -}}
	{{- $ret = "" -}}
{{- end -}}


{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
{{- $ret = partial "Hestia/functions/string/Init" $ret  -}}
{{- if $ret.Console -}}
	{{- $console = printf ".Lang: %s" $dataList.Console.Message -}}
	{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $ret = partial "Hestia/functions/string/TrimWhitespace" $ret.Output -}}
{{- $dataList = merge $dataList (dict "OnLoad" $ret) -}}




{{- /* process the .Download */ -}}
{{- $ret = merge . (dict "Input" (dict "Query" ".Input.Download")) -}}
{{- $ret = partial "Hestia/functions/data/Get" $ret -}}
{{- if not $ret -}}
	{{- $ret = "" -}}
{{- end -}}


{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
{{- $ret = partial "Hestia/functions/boolean/Init" $ret  -}}
{{- if $ret.Console -}}
	{{- $console = printf ".Download: %s" $dataList.Console.Message -}}
	{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $dataList = merge $dataList (dict "Download" $ret.Output) -}}




{{- /* process the .ID */ -}}
{{- $ret = merge . (dict "Input" (dict "Query" ".Input.ID")) -}}
{{- $ret = partial "Hestia/functions/data/Get" $ret -}}
{{- if not $ret -}}
	{{- $ret = "" -}}
{{- end -}}


{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
{{- $ret = partial "Hestia/functions/string/Init" $ret  -}}
{{- if $ret.Console -}}
	{{- $console = printf ".ID: %s" $dataList.Console.Message -}}
	{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $ret = partial "Hestia/functions/string/TrimWhitespace" $ret.Output -}}
{{- $dataList = merge $dataList (dict "ID" $ret) -}}




{{- /* process the .Class */ -}}
{{- $ret = merge . (dict "Input" (dict "Query" ".Input.Class")) -}}
{{- $ret = partial "Hestia/functions/data/Get" $ret -}}
{{- if not $ret -}}
	{{- $ret = "" -}}
{{- end -}}


{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
{{- $ret = partial "Hestia/functions/string/Init" $ret  -}}
{{- if $ret.Console -}}
	{{- $console = printf ".Class: %s" $dataList.Console.Message -}}
	{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $ret = partial "Hestia/functions/string/TrimWhitespace" $ret.Output -}}
{{- $dataList = merge $dataList (dict "Class" $ret) -}}




{{- /* render output */ -}}
{{- $ret = printf "layouts/partials/Hestia/functions/render/components/anchor%s"
	$dataList.Format.Extension -}}
{{- if partial "Hestia/functions/data/filesystem/IsFileExists" $ret -}}
	{{- $ret = strings.TrimPrefix "layouts/partials" $ret -}}
	{{- partial $ret $dataList -}}
{{- else -}}
	{{- $dataList.URL -}}
{{- end -}}
