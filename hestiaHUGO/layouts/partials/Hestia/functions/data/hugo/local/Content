{{- /*
Copyright 2022 "Holloway" Chew, Kean Ho <kean.ho.chew@zoralab.com>
Copyright 2022 ZORALab Enterprise <tech@zoralab.com>


Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at

                 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License.
*/ -}}
{{- /* INPUT PARAMETERS */ -}}
{{- /* . = Page data in Hestia Structure */ -}}




{{- /* prepare working variables for this function */ -}}
{{- $Page := . -}}
{{- $Local := dict -}}
{{- $dataList := dict -}}
{{- $ret := false -}}




{{- /* parse local config file */ -}}
{{- range $k, $v := .Content -}}
	{{- /* NOTE:
		Hugo has a stubborn way of processing .html file. We don't have
		any choice but to use a special extension .hestiaHTML implicitly
		if we want a pure Go HTML implementations.

		We can document this and present it to the user so that they
		know and aware what to do with it.
	*/ -}}
	{{- $Local = false -}}
	{{- range $j, $w := (slice "layouts/" "assets/" "static/") -}}
		{{ if strings.HasPrefix $v $w -}}
			{{- $Local = true -}}
		{{- end -}}
	{{- end -}}

	{{- $Local = $v -}}
	{{- if not $Local -}}
		{{- $Local = printf "%s/%s" $Page.Filesystem.Directory $v -}}
	{{- end -}}
	{{- $Local = path.Clean $Local -}}
	{{- $Local = merge $Page (dict "Input" (dict "Path" $Local)) -}}
	{{- $Local = partial "Hestia/functions/data/io/fs/ParseFile" $Local -}}
	{{- if $Local.Console -}}
		{{- $Local = "" -}}
	{{- else -}}
		{{- $Local = string $Local.Output -}}
	{{- end -}}


	{{- $Page = merge $Page (dict "Content" (dict $k $Local)) -}}
{{- end -}}




{{- /* render output */ -}}
{{- return $Page -}}
