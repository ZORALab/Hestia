{{- /* INPUT PARAMETERS */ -}}
{{- /* .  = Page data in Hestia Structure  */ -}}




{{- /* prepare working variables for this function */ -}}
{{- $Page := partial "Hestia/functions/data/Clean" . -}}
{{- $console := false -}}
{{- $dataList := dict -}}
{{- $list := dict -}}
{{- $ret := false -}}




{{- /* run through each .Protocol */ -}}
{{- $dataList := dict -}}
{{- range $k, $v := .PWA.Protocols -}}
	{{- $list = dict -}}




	{{- /* process .Protocol */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Protocol)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf "PWA: Protocols.%v.Protocol: %v"
			(upper $k)
			$ret.Console.Message
		-}}
		{{- $console = dict "Console" (dict "Message" $console) -}}
		{{- $console = merge $Page $console -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}


		{{- continue -}}
	{{- end -}}


	{{- $ret = merge $Page (dict "Input" (dict "Data" $ret.Output)) -}}
	{{- $ret = partial "Hestia/functions/data/string/ID-fy" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf "PWA: Protocols.%v.Protocol: %v"
			(upper $k)
			$ret.Console.Message
		-}}
		{{- $console = dict "Console" (dict "Message" $console) -}}
		{{- $console = merge $Page $console -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}


		{{- continue -}}
	{{- end -}}

	{{- $list = merge $list (dict "Protocol" $ret.Output) -}}




	{{- /* process .URL */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "URL" $v.URL)) -}}
	{{- $ret = partial "Hestia/functions/data/url/Init" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf "PWA: Protocols.%v.URL: %v"
			(upper $k)
			$ret.Console.Message
		-}}
		{{- $console = dict "Console" (dict "Message" $console) -}}
		{{- $console = merge $Page $console -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}


		{{- continue -}}
	{{- end -}}
	{{- $list = merge $list (dict "URL" $ret.Output) -}}




	{{- /* merge into $dataList */ -}}
	{{- $dataList = merge $dataList (dict (upper $k) $list) -}}
{{- end -}}




{{- /* render output */ -}}
{{- return dict "Protocols" $dataList -}}
