{{- /*
Copyright 2022 "Holloway" Chew, Kean Ho <kean.ho.chew@zoralab.com>
Copyright 2022 ZORALab Enterprise <tech@zoralab.com>


Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at

                 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License.
*/ -}}
{{- /* INPUT PARAMETERS */ -}}
{{- /* . = Page data in Hestia Structure */ -}}




{{- /* prepare variables for this function */ -}}
{{- $Page := partial "Hestia/functions/data/Clean" . -}}
{{- $console := dict -}}
{{- $dataList := dict -}}
{{- $data := dict -}}
{{- $ret := false -}}




{{- /* process .Time */ -}}
{{- $dataList = dict -}}
{{- range $k, $v := $Page.Time -}}
	{{- /* process time data */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v)) -}}
	{{- $ret = partial "Hestia/functions/data/time/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf "Time.%v: %v" (title (lower $k)) $ret.Console.Message -}}
		{{- $console = dict "Console" (dict "Message" $console) -}}
		{{- $console = merge $Page $console -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
	{{- end -}}
	{{- $ret = $ret.Output -}}

	{{- $data = dict "HUGO" $ret -}}
	{{- $data = merge $data
		(dict "UNIX" $ret.UnixNano) -}}
	{{- $data = merge $data
		(dict "ID" ($ret.Format "200601021504050700")) -}}
	{{- $data = merge $data
		(dict "RFC3339" ($ret.Format "2006-01-02T15:04:05Z07:00")) -}}
	{{- $data = merge $data
		(dict "RFC1123Z" ($ret.Format "Mon, 02 Jan 2006 15:04:05 -0700")) -}}
	{{- $data = merge $data
		(dict "ISO8601" ($ret.Format "2006-01-02T15:04:05-07:00")) -}}
	{{- $data = merge $data
		(dict "LONG" ($ret.Format "Monday, January 02, 2006 15:04:05 -07:00")) -}}
	{{- $data = merge $data
		(dict "Year" ($ret.Format "2006")) -}}
	{{- $data = merge $data
		(dict "Month" ($ret.Format "01")) -}}
	{{- $data = merge $data
		(dict "Day" ($ret.Format "02")) -}}
	{{- $data = merge $data
		(dict "HH::MM::SS" ($ret.Format "15:04:05")) -}}
	{{- $data = merge $data
		(dict "GMT" ($ret.Format "-07:00")) -}}

	{{- $dataList = merge $dataList (dict (title (lower $k)) $data) -}}
{{- end -}}
{{- $Page = merge $Page (dict "Time" false) -}}
{{- $Page = merge $Page (dict "Time" $dataList) -}}




{{- /* process .Format */ -}}
{{- $dataList := dict -}}
{{- range $k, $v := $Page.Formats -}}
	{{- $data = dict -}}


	{{- /* process .Type */ -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $v.Type -}}
	{{- $ret = merge $Page (dict "Input" (dict "Type" $ret)) -}}
	{{- $ret = partial "Hestia/functions/data/mime/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf ".Formats.%v.Type: %s" $ret.Console.Message -}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/console/Errorf" $console -}}
		{{- continue -}}
	{{- end -}}
	{{- $ret = $ret.Output -}}
	{{- $data = merge $data (dict "Type" $ret) -}}


	{{- /* process .Extension */ -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $v.Extension -}}
	{{- if not (hasPrefix $ret ".") -}}
		{{- $ret = printf ".%s" $ret -}}
	{{- end -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf ".Formats.%v.Extension: %s" $ret.Console.Message -}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/console/Errorf" $console -}}
		{{- continue -}}
	{{- end -}}
	{{- $ret = $ret.Output -}}
	{{- $data = merge $data (dict "Extension" $ret) -}}


	{{- /* process .Filename */ -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $v.Filename -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf ".Formats.%v.Filename: %s" $ret.Console.Message -}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/console/Errorf" $console -}}
		{{- continue -}}
	{{- else -}}
		{{- $ret = $ret.Output -}}
	{{- end -}}
	{{- $data = merge $data (dict "Filename" $ret) -}}


	{{- /* process .Protocol */ -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $v.Protocol -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf ".Formats.%v.Protocol: %s" $ret.Console.Message -}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/console/Errorf" $console -}}
		{{- $ret = "http://" -}}
	{{- else -}}
		{{- $ret = $ret.Output -}}
	{{- end -}}
	{{- $data = merge $data (dict "Protocol" (lower $ret)) -}}


	{{- /* process .Relationship */ -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $v.Relationship -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf ".Formats.%v.Relationship: %s" $ret.Console.Message -}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/console/Errorf" $console -}}
		{{- $ret = "alternate" -}}
	{{- else -}}
		{{- $ret = $ret.Output -}}
	{{- end -}}
	{{- $data = merge $data (dict "Relationship" (lower $ret)) -}}


	{{- /* process .Marshallable */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Marshallable)) -}}
	{{- $ret = partial "Hestia/functions/data/boolean/Init" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf ".Formats.%v.Marshallable: %s" $ret.Console.Message -}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/console/Errorf" $console -}}
	{{- end -}}
	{{- $data = merge $data (dict "Marshallable" $ret.Output) -}}


	{{- /* merge to $dataList */ -}}
	{{- $dataList = merge $dataList (dict (upper (string $k)) $data) -}}
{{- end -}}
{{- $Page = merge $Page (dict "Formats" false) -}}
{{- $Page = merge $Page (dict "Formats" $dataList) -}}




{{- /* process .URL.Base */ -}}
{{- $dataList = merge $Page (dict "Input" (dict "URL" $Page.URL.Base)) -}}
{{- $dataList = partial "Hestia/functions/data/url/Sanitize" $dataList -}}
{{- $Page = merge $Page (dict "URL" (dict "Base" false)) -}}
{{- $Page = merge $Page (dict "URL" (dict "Base" $dataList.Output)) -}}




{{- /* process .URL.Current.Absolute */ -}}
{{- $dataList = merge $Page (dict "Input" (dict "URL" $Page.URL.Current.Absolute)) -}}
{{- $dataList = partial "Hestia/functions/data/url/Sanitize" $dataList -}}
{{- $Page = merge $Page (dict "URL" (dict "Current" (dict "Absolute" false))) -}}
{{- $Page = merge $Page (dict "URL" (dict "Current" (dict "Absolute" $dataList.Output))) -}}




{{- /* process .Languages.List */ -}}
{{- $dataList = dict -}}
{{- range $k, $v := $Page.Languages.List -}}
	{{- /* process .Code and .ID */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Lang" $k)) -}}
	{{- $ret = partial "Hestia/functions/data/i18n/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf "Languages.List: '%v' -> %v" $k $ret.Console.Message -}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/console/Errorf" $console -}}
		{{- continue -}}
	{{- end -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
	{{- $data = dict "Code" $ret "ID" (upper $ret) -}}


	{{- /* process .Name */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Name)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf "Languages.List.%v.Name: %v"
			$data.ID $ret.Console.Message -}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/console/Errorf" $console -}}
	{{- end -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
	{{- $data = merge $data (dict "Name" $ret) -}}


	{{- /* process .Directory */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Directory)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf "Languages.List.%v.Directory: %v"
			$data.ID $ret.Console.Message -}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/console/Errorf" $console -}}
	{{- end -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
	{{- $data = merge $data (dict "Directory" $ret) -}}


	{{- /* process .Direction */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Direction)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf "Languages.List.%v.Direction: %v"
			$data.ID $ret.Console.Message -}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/console/Errorf" $console -}}
	{{- end -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
	{{- $data = merge $data (dict "Direction" $ret) -}}


	{{- /* process .Default */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Default)) -}}
	{{- $ret = partial "Hestia/functions/data/boolean/Init" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf "Languages.List.%v.Default: %v"
			$data.ID $ret.Console.Message -}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/console/Errorf" $console -}}
	{{- end -}}
	{{- $data = merge $data (dict "Default" $ret.Output) -}}


	{{- /* process .URL  */ -}}
	{{- range $j, $w := (slice "PAGE" "ERROR_404" "HOME") -}}
		{{- $ret = index $v.URL $w -}}
		{{- $ret = merge $Page (dict "Input" (dict "URL" $ret)) -}}
		{{- $ret = partial "Hestia/functions/data/url/Sanitize" $ret -}}
		{{- if $ret.Console -}}
			{{- $console = printf "Languages.List.%v.URL.%v: %v"
				$data.ID $w $ret.Console.Message -}}
			{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
			{{- partial "Hestia/console/Errorf" $console -}}
		{{- end -}}
		{{- $data = merge $data (dict "URL" (dict $w $ret.Output)) -}}
	{{- end -}}


	{{- $dataList = merge $dataList (dict $data.ID $data) -}}
{{- end -}}
{{- $Page = merge $Page (dict "Languages" (dict "List" false)) -}}
{{- $Page = merge $Page (dict "Languages" (dict "List" $dataList)) -}}


{{- $dataList = dict -}}
{{- range $k, $v := $Page.Languages.List -}}
	{{- if $v.Default -}}
		{{- $dataList = merge $dataList (dict "Default" $v) -}}
	{{- end -}}

	{{- if hasPrefix $Page.Filesystem.Directory $v.Directory -}}
		{{- $dataList = merge $dataList (dict "Current" $v) -}}
	{{- else if and (not $dataList) $v.Default -}}
		{{- $dataList = merge $dataList (dict "Current" $v) -}}
		{{- $ret = $v -}}
	{{- else -}}
		{{- $dataList = merge $dataList (dict "Alternatives" (dict $k $v)) -}}
	{{- end -}}
{{- end -}}
{{- if not $dataList.Current -}}
	{{- $dataList = merge $dataList (dict "Current" $dataList.Default) -}}
{{- end -}}

{{- $Page = merge $Page (dict "Languages" (dict
	"Current" false
	"Default" false
	"Alternatives" false
)) -}}
{{- $Page = merge $Page (dict "Languages" $dataList) -}}




{{- /* process .Titles.Site */ -}}
{{- $dataList = dict -}}
{{- range $k, $v := $Page.Titles.Site.List -}}
	{{- $data = dict -}}
	{{- range $j, $w := (slice "Full" "Short" "ID" "SKU") -}}
		{{- $ret = index $v $w -}}
		{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
		{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
		{{- if $ret.Console -}}
			{{- $console = printf ".Titles.Site.%v.%v: %s"
				(upper $k)
				$w
				$ret.Console.Message
			-}}

			{{- $console = dict "Console" (dict "Message" $console) -}}
			{{- partial "Hestia/functions/console/Errorf" $console -}}
		{{- end -}}
		{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
		{{- $data = merge $data (dict $w $ret) -}}
	{{- end -}}

	{{- $dataList = merge $dataList (dict (upper $k) $data) -}}
{{- end -}}
{{- $Page = merge $Page (dict "Titles" (dict "Site" (dict "List" false))) -}}
{{- $Page = merge $Page (dict "Titles" (dict "Site" (dict "List" $dataList))) -}}




{{- /* process .Titles.Current */ -}}
{{- $dataList = index $Page.Titles.Site.List $Page.Languages.Current.ID -}}
{{- $Page = merge $Page (dict "Titles" (dict "Current" false)) -}}
{{- $Page = merge $Page (dict "Titles" (dict "Current" $dataList)) -}}




{{- /* process .Titles.Default */ -}}
{{- $dataList = index $Page.Titles.Site.List $Page.Languages.Default.ID -}}
{{- $Page = merge $Page (dict "Titles" (dict "Default" false)) -}}
{{- $Page = merge $Page (dict "Titles" (dict "Default" $dataList)) -}}




{{- /* process .Titles.Page */ -}}
{{- $dataList = merge $Page (dict "Input" (dict "Data" $Page.Titles.Page)) -}}
{{- $dataList = partial "Hestia/functions/data/string/Sanitize" $dataList -}}
{{- if $dataList.Console -}}
	{{- $console = printf ".Titles.Page: %s" $dataList.Console.Message -}}
	{{- $console = dict "Console" (dict "Message" $console) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $dataList = partial "Hestia/functions/data/string/TrimWhitespace" $dataList.Output -}}
{{- $Page = merge $Page (dict "Titles" (dict "Page" false)) -}}
{{- $Page = merge $Page (dict "Titles" (dict "Page" $dataList)) -}}




{{- /* process .Descriptions.Site */ -}}
{{- $dataList = dict -}}
{{- range $k, $v := $Page.Descriptions.Site -}}
	{{- range $j, $w := (slice "Pitch" "Summary") -}}
		{{- $ret = index $v $w -}}
		{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
		{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
		{{- if $ret.Console -}}
			{{- $console = printf ".Descriptions.Site.%v.%v: %v"
						(upper $k) $w $dataList.Console.Message -}}
			{{- $console = dict "Console" (dict "Message" $console) -}}
			{{- partial "Hestia/functions/console/Errorf" $console -}}
		{{- end -}}
		{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
		{{- $ret = replace $ret "\r\n" " " -}}
		{{- $ret = replace $ret "\n" " " -}}
		{{- $dataList = merge $dataList (dict (upper $k) (dict $w $ret)) -}}
	{{- end -}}
{{- end -}}
{{- $Page = merge $Page (dict "Descriptions" (dict "Site" false)) -}}
{{- $Page = merge $Page (dict "Descriptions" (dict "Site" $dataList)) -}}




{{- /* process .Descriptions.Current */ -}}
{{- $dataList = index $Page.Descriptions.Site $Page.Languages.Current.ID -}}
{{- $Page = merge $Page (dict "Descriptions" (dict "Site" (dict "Current" false))) -}}
{{- $Page = merge $Page (dict "Descriptions" (dict "Site" (dict "Current" $dataList))) -}}




{{- /* process .Descriptions.Default */ -}}
{{- $dataList = index $Page.Descriptions.Site $Page.Languages.Default.ID -}}
{{- $Page = merge $Page (dict "Descriptions" (dict "Site" (dict "Default" false))) -}}
{{- $Page = merge $Page (dict "Descriptions" (dict "Site" (dict "Default" $dataList))) -}}




{{- /* process .Descriptions.Page */ -}}
{{- $dataList = dict -}}
{{- range $i, $v := (slice "Pitch" "Summary") -}}
	{{- $ret = index $Page.Descriptions.Page $v -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf ".Descriptions.Page.%v: %v"
			$v $dataList.Console.Message -}}
		{{- $console = dict "Console" (dict "Message" $console) -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
	{{- end -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
	{{- $ret = replace $ret "\r\n" " " -}}
	{{- $ret = replace $ret "\n" " " -}}
	{{- $dataList = merge $dataList (dict $v $ret) -}}
{{- end -}}
{{- $Page = merge $Page (dict "Descriptions" (dict "Page" false)) -}}
{{- $Page = merge $Page (dict "Descriptions" (dict "Page" $dataList)) -}}




{{- /* process .Keywords */ -}}
{{- $data = dict -}}
{{- range $i, $v := .Keywords.List -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf ".Keywords '%v': %v" $v $dataList.Console.Message -}}
		{{- $console = dict "Console" (dict "Message" $console) -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
	{{- end -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
	{{- $ret = replace $ret "\r\n" " " -}}
	{{- $ret = replace $ret "\n" " " -}}
	{{- $data = merge $data (dict $ret true) -}}
{{- end -}}


{{- $ret = 0 -}}
{{- $dataList = dict -}}
{{- range $v, $i := $data -}}
	{{- $dataList = merge $dataList (dict (string $ret) $v) -}}
	{{- $ret = add $ret 1 -}}
{{- end -}}
{{- $Page = merge $Page (dict "Keywords" (dict "List" false)) -}}
{{- $Page = merge $Page (dict "Keywords" (dict "List" $dataList)) -}}




{{- /* process .Redirect.URL */ -}}
{{- $dataList = merge $Page (dict "Input" (dict "URL" (default "" $Page.Redirect.URL))) -}}
{{- $dataList = partial "Hestia/functions/data/url/Sanitize" $dataList -}}
{{- if $dataList.Console -}}
	{{- $console = printf ".Redirect.URL: %v" $dataList.Console.Message -}}
	{{- $console = dict "Console" (dict "Message" $console) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $Page = merge $Page (dict "Redirect" (dict "URL" false)) -}}
{{- $Page = merge $Page (dict "Redirect" (dict "URL" $dataList)) -}}




{{- /* process .Redirect.Delay */ -}}
{{- $dataList = merge $Page (dict "Input" (dict "Data" (default 0 $Page.Redirect.Delay))) -}}
{{- $dataList = partial "Hestia/functions/data/math/SanitizeNumber" $dataList -}}
{{- if $dataList.Console -}}
	{{- $console = printf ".Redirect.Delay: %v" $dataList.Console.Message -}}
	{{- $console = dict "Console" (dict "Message" $console) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $Page = merge $Page (dict "Redirect" (dict "Delay" false)) -}}
{{- $Page = merge $Page (dict "Redirect" (dict "Delay" $dataList)) -}}




{{- /* process .Redirect.Enabled */ -}}
{{- $dataList = false -}}
{{- if $Page.Redirect.Enabled -}}
	{{- $dataList = true -}}
{{- end -}}
{{- $Page = merge $Page (dict "Redirect" (dict "Enabled" false)) -}}
{{- $Page = merge $Page (dict "Redirect" (dict "Enabled" $dataList)) -}}




{{- /* process .Redirect.Language.Enabled */ -}}
{{- $dataList = false -}}
{{- if $Page.Redirect.Language.Enabled -}}
	{{- $dataList = true -}}
{{- end -}}
{{- $Page = merge $Page (dict "Redirect" (dict "Language" (dict "Enabled" false))) -}}
{{- $Page = merge $Page (dict "Redirect" (dict "Language" (dict "Enabled" $dataList))) -}}




{{- /* process .Thumbnails */ -}}
{{- $dataList = dict -}}
{{- range $i, $v := $Page.Thumbnails -}}
	{{- $ret = merge $Page (dict "Input" $v) -}}
	{{- $ret = partial "Hestia/functions/data/media/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf ".Thumbnails.%v: %v" $i $ret.Console.Message -}}
		{{- $console = dict "Message" $console -}}
		{{- $console = merge $Page (dict "Console" $console) -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
		{{- continue -}}
	{{- end -}}


	{{- $dataList = merge $dataList (dict (string $i) $ret.Output) -}}
{{- end -}}
{{- $Page = merge $Page (dict "Thumbnails" false) -}}
{{- $Page = merge $Page (dict "Thumbnails" $dataList) -}}




{{- /* process .Contributors.Site */ -}}
{{- $dataList = "" -}}
{{- $dataList = partial "Hestia/functions/data/caches/contributors/Load" $Page -}}
{{- if or .IsRoot (not $dataList) -}}
	{{- $dataList = partial "Hestia/functions/data/hugo/process/Contributors/Init" $Page -}}
	{{- $dataList = merge $Page (dict "Input" (dict "Data" $dataList)) -}}
	{{- partial "Hestia/functions/data/caches/contributors/Save" $dataList -}}
	{{- $dataList = $dataList.Input.Data -}}
{{- end -}}
{{- $Page = merge $Page (dict "Contributors" false) -}}
{{- $Page = merge $Page (dict "Contributors" (dict "Site" $dataList)) -}}




{{- /* process .Contributors.Page */ -}}
{{- $dataList = dict -}}
{{- range $k, $v := .Contributors.Page -}}
	{{- $data = index $Page.Contributors.Site $k -}}
	{{- if not $data -}}
		{{- $console = printf ".Contributors.Page: unknown entity '%v'.\n" $k -}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
		{{- continue -}}
	{{- end -}}


	{{- if not (index $v "Contribution") -}}
		{{- continue -}}
	{{- end -}}


	{{- /* process .Contribution */ -}}
	{{- range $j, $w := $Page.Constants.Contributors.Roles -}}
		{{- $ret = index $v.Contribution $w -}}
		{{- if not $ret -}}
			{{- continue -}}
		{{- end -}}

		{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
		{{- $ret = partial "Hestia/functions/data/boolean/Init" $ret -}}
		{{- if $ret.Console -}}
			{{- $console = printf ".Contributors.Page.%v.Contribution.%v: %v"
				$k $w $ret.Console.Message -}}
			{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
			{{- partial "Hestia/functions/console/Errorf" $console -}}
			{{- continue -}}
		{{- end -}}
		{{- $ret = $ret.Output -}}

		{{- if $ret -}}
			{{- $data = merge $data (dict $w (dict "Current" $ret)) -}}
		{{- end -}}
	{{- end -}}


	{{- $dataList = merge $dataList (dict $k $data) -}}
{{- end -}}
{{- $Page = merge $Page (dict "Contributors" (dict "Page" false)) -}}
{{- $Page = merge $Page (dict "Contributors" (dict "Page" $dataList)) -}}




{{- /* process .Robots.List */ -}}
{{- $dataList = dict -}}
{{- range $i, $v := $Page.Robots.List -}}
	{{- /* process .Name */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Name)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf "Robots.%v.Name: %v" $i $ret.Console.Message -}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- $console = merge $Page $console -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
	{{- end -}}
	{{- $data = dict "Name" $ret.Output -}}


	{{- /* process .Content */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Content)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf "Robots.%v.Content: %v" $i $ret.Console.Message -}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
	{{- end -}}
	{{- $data = merge $data (dict "Content" $ret.Output) -}}


	{{- /* append to list */ -}}
	{{- if not (and $data.Name $data.Content) -}}
		{{- continue -}}
	{{- end -}}
	{{- $dataList = append $data $dataList -}}
{{- end -}}
{{- $Page = merge $Page (dict "Robots" (dict "List" false)) -}}
{{- $Page = merge $Page (dict "Robots" (dict "List" $dataList)) -}}




{{- /* process .Vendors.GoHugo */ -}}
{{- $dataList = merge $Page (dict "Input" (dict "Data" $Page.Vendors.GoHugo.Version)) -}}
{{- $dataList = partial "Hestia/functions/data/string/Sanitize" $dataList -}}
{{- if $dataList.Console -}}
	{{- $console = printf ".Vendors.GoHugo.Version: %v" $dataList.Console.Message -}}
	{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $dataList = partial "Hestia/functions/data/string/TrimWhitespace" $dataList.Output -}}
{{- $Page = merge $Page (dict "Vendors" (dict "GoHugo" (dict "Version" false))) -}}
{{- $Page = merge $Page (dict "Vendors" (dict "GoHugo" (dict "Version" $dataList))) -}}




{{- /* process .Vendors.ZORALab */ -}}
{{- $dataList = merge $Page (dict "Input"
	(dict "Data" $Page.Vendors.ZORALab.Hestia.Version)
) -}}
{{- $dataList = partial "Hestia/functions/data/string/Sanitize" $dataList -}}
{{- if $dataList.Console -}}
	{{- $console = printf ".Vendors.ZORALab.Hestia.Version: %v"
		$dataList.Console.Message -}}
	{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $dataList = partial "Hestia/functions/data/string/TrimWhitespace" $dataList.Output -}}
{{- $Page = merge $Page (dict "Vendors" (dict "ZORALab"
	(dict "Hestia" (dict "Version" false))
)) -}}
{{- $Page = merge $Page (dict "Vendors" (dict "ZORALab"
	(dict "Hestia" (dict "Version" $dataList))
)) -}}




{{- /* process .Vendors.Google */ -}}
{{- $dataList = merge $Page (dict "Input"
	(dict "Data" $Page.Vendors.Google.Analytics4.Tag)
) -}}
{{- $dataList = partial "Hestia/functions/data/string/Sanitize" $dataList -}}
{{- if $dataList.Console -}}
	{{- $console = printf ".Vendors.Google.Analytics4.Tag: %v"
		$dataList.Console.Message -}}
	{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $dataList = partial "Hestia/functions/data/string/TrimWhitespace" $dataList.Output -}}
{{- $Page = merge $Page (dict "Vendors" (dict "Google"
	(dict "Analytics4" (dict "Tag" false))
)) -}}
{{- $Page = merge $Page (dict "Vendors" (dict "Google"
	(dict "Analytics4" (dict "Tag" $dataList))
)) -}}




{{- /* process .Vendors.Twitter */ -}}
{{- $dataList = merge $Page (dict "Input" (dict "Data" $Page.Vendors.Twitter.Site.Handle)) -}}
{{- $dataList = partial "Hestia/functions/data/string/Sanitize" $dataList -}}
{{- if $dataList.Console -}}
	{{- $console = printf ".Vendors.Twitter.Site.Handle: %v"
		$dataList.Console.Message -}}
	{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $dataList = partial "Hestia/functions/data/string/TrimWhitespace" $dataList.Output -}}
{{- $dataList = strings.TrimPrefix "@" $dataList -}}
{{- if $dataList -}}
	{{- $dataList = printf "@%s" $dataList -}}
{{- end -}}
{{- $Page = merge $Page (dict "Vendors" (dict "Twitter"
	(dict "Site" (dict "Handle" false))
)) -}}
{{- $Page = merge $Page (dict "Vendors" (dict "Twitter"
	(dict "Site" (dict "Handle" $dataList))
)) -}}


{{- $dataList = merge $Page (dict "Input" (dict "Data"
	$Page.Vendors.Twitter.Creator.Handle
)) -}}
{{- $dataList = partial "Hestia/functions/data/string/Sanitize" $dataList -}}
{{- if $dataList.Console -}}
	{{- $console = printf ".Vendors.Twitter.Creator.Handle: %v"
		$dataList.Console.Message -}}
	{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $dataList = partial "Hestia/functions/data/string/TrimWhitespace" $dataList.Output -}}
{{- $dataList = strings.TrimPrefix "@" $dataList -}}
{{- if $dataList -}}
	{{- $dataList = printf "@%s" $dataList -}}
{{- end -}}
{{- $Page = merge $Page (dict "Vendors" (dict "Twitter"
	(dict "Creator" (dict "Handle" false))
)) -}}
{{- $Page = merge $Page (dict "Vendors" (dict "Twitter"
	(dict "Creator" (dict "Handle" $dataList))
)) -}}


{{- $dataList = dict -}}
{{- range $i, $v := $Page.Thumbnails -}}
	{{ $ret = index $v.Sources "0" -}}
	{{- if not (partial "Hestia/functions/data/mime/IsImage" $ret.Type) -}}
		{{- continue -}}
	{{- end -}}

	{{- $ret = merge $Page (dict "Input" (dict "Width" 1200 "Height" 630)) -}}
	{{- $ret = merge $ret (dict "Input" (dict "Current" $data "Sample" $v)) -}}
	{{- $ret = partial "Hestia/functions/data/media/ChooseSize" $ret -}}
	{{- if not $console -}}
		{{- $dataList = $ret.Output -}}
	{{- end -}}
{{- end -}}
{{- $Page = merge $Page (dict "Vendors" (dict "Twitter"
	(dict "Card" (dict "Image" false))
)) -}}
{{- $Page = merge $Page (dict "Vendors" (dict "Twitter"
	(dict "Card" (dict "Image" $dataList))
)) -}}


{{- $dataList = dict -}}
{{- range $i, $v := $Page.Thumbnails -}}
	{{ $ret = index $v.Sources "0" -}}
	{{- $ret = merge $Page (dict "Input" (dict "Width" 1200 "Height" 630)) -}}
	{{- $ret = merge $ret (dict "Input" (dict "Current" $data "Sample" $v)) -}}
	{{- $ret = partial "Hestia/functions/data/media/ChooseSize" $ret -}}
	{{- if not $console -}}
		{{- $dataList = $ret.Output -}}
	{{- end -}}
{{- end -}}
{{- $Page = merge $Page (dict "Vendors" (dict "Twitter"
	(dict "Card" (dict "Media" false))
)) -}}
{{- $Page = merge $Page (dict "Vendors" (dict "Twitter"
	(dict "Card" (dict "Media" $dataList))
)) -}}


{{- $dataList = "summary_large_image" -}}
{{- if $Page.Vendors.Twitter.Card.Media -}}
	{{- $dataList = "player" -}}
{{- end -}}
{{- $Page = merge $Page (dict "Vendors" (dict "Twitter"
	(dict "Card" (dict "Type" false))
)) -}}
{{- $Page = merge $Page (dict "Vendors" (dict "Twitter"
	(dict "Card" (dict "Type" $dataList))
)) -}}


{{- $dataList = dict -}}
{{- range $k, $v := $Page.Vendors.Twitter.Stores -}}
	{{- if eq $k "iphone" -}}
		{{- /* PASS - Do nothing */ -}}
	{{- else if eq $k "ipad" -}}
		{{- /* PASS - Do nothing */ -}}
	{{- else if eq $k "googleplay" -}}
		{{- /* PASS - Do nothing */ -}}
	{{- else -}}
		{{- $console = printf
			".Vendors.Twitter.Stores: unknown store name: '%v'.\n"
			$k
		-}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
		{{- continue -}}
	{{- end -}}


	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.ID)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf
			".Vendors.Twitter.Stores.%v.ID: %v.\n"
			$k
			$ret.Console.Message
		-}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
	{{- end -}}
	{{- $data = dict "ID" $ret.Output -}}


	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Name)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf
			".Vendors.Twitter.Stores.%v.ID: %v.\n"
			$k
			$ret.Console.Message
		-}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
	{{- end -}}
	{{- $data = merge $data (dict "Name" $ret.Output) -}}


	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.URL)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Sanitize" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf
			".Vendors.Twitter.Stores.%v.ID: %v.\n"
			$k
			$ret.Console.Message
		-}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
	{{- end -}}
	{{- $data = merge $data (dict "URL" $ret.Output) -}}


	{{- $dataList = merge $dataList (dict $k $data) -}}
{{- end -}}
{{- $Page = merge $Page (dict "Vendors" (dict "Twitter"
	(dict "Stores" false)
)) -}}
{{- $Page = merge $Page (dict "Vendors" (dict "Twitter"
	(dict "Stores" $dataList)
)) -}}




{{- /* process .Data.Page */ -}}
{{- $dataList = dict -}}
{{- range $k, $v := $Page.Data.Page -}}
	{{- if not $v -}}
		{{- continue -}}
	{{- else if partial "Hestia/functions/data/list/IsMap" $v -}}
		{{- $ret = index $v "Filename" -}}
	{{- else if partial "Hestia/functions/data/string/IsString" $v -}}
		{{- $ret = $v -}}
	{{- else -}}
		{{- continue -}}
	{{- end -}}


	{{- if not (partial "Hestia/functions/data/filesystem/IsFileExists" $ret) -}}
		{{- continue -}}
	{{- end -}}


	{{- $ret = merge $Page (dict "Input" (dict "Path" $ret)) -}}
	{{- $ret = partial "Hestia/functions/data/filesystem/ParseDataFile" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf ".Data.Page: %v" $ret.Console.Message -}}
		{{- $console = merge $Page (dict "Console" (dict "Message" $console)) -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
	{{- end -}}
	{{- $ret = $ret.Output -}}


	{{- if $ret -}}
		{{- $dataList = merge $dataList $ret -}}
	{{- end -}}
{{- end -}}
{{- $Page = merge $Page (dict "Data" (dict "Page" false)) -}}
{{- $Page = merge $Page (dict "Data" (dict "Page" $dataList)) -}}




{{- /* render output */ -}}
{{- return $Page -}}
