{{- /* INPUT PARAMETERS */ -}}
{{- /* .  = Page data in Hestia Structure  */ -}}




{{- /* prepare working variables for this function */ -}}
{{- $Page := partial "Hestia/functions/data/Clean" . -}}
{{- $dataList := dict -}}
{{- $console := dict -}}
{{- $ret := false -}}




{{- /* generate service worker javascript file */ -}}
{{- $dataList = partial "Hestia/functions/render/js/pwa/worker.js" . -}}
{{- $dataList = merge $Page (dict "Input" (dict "Data" (string $dataList))) -}}
{{- $dataList = partial "Hestia/functions/data/string/Init" $dataList -}}
{{- if $dataList.Console -}}
	{{- $console = printf "PWA: service worker: %v" $dataList.Console.Message -}}
	{{- $console = dict "Console" (dict "Message" $console) -}}
	{{- $console = merge $Page $console -}}
	{{- partial "Hestia/functions/console/Errorf" $console -}}
{{- end -}}
{{- $dataList = $dataList.Output -}}


{{- if not .IsServerMode -}}
	{{- $ret = dict "Type" "application/javascript" "Data" $dataList -}}
	{{- $ret = merge $Page (dict "Input" $ret) -}}
	{{- $ret = partial "Hestia/functions/data/string/Minify" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf "PWA: service worker: %v" $ret.Console.Message -}}
		{{- $console = dict "Console" (dict "Message" $console) -}}
		{{- $console = merge $Page $console -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
	{{- else -}}
		{{- $dataList = $ret.Output -}}
	{{- end -}}
{{- end -}}

{{- $dataList = resources.FromString "app.js" $dataList -}}
{{- $dataList = dict "URL" $dataList.Permalink -}}




{{- /* render output */ -}}
{{- return dict "PWA" (dict "Worker" $dataList) -}}
