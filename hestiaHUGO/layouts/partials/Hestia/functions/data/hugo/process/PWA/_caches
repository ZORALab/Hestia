{{- /* INPUT PARAMETERS */ -}}
{{- /* .  = Page data in Hestia Structure  */ -}}




{{- /* prepare working variables for this function */ -}}
{{- $Page := . -}}
{{- $console := false -}}
{{- $dataList := slice -}}
{{- $data := dict -}}
{{- $ret := false -}}




{{- /* run through each .Caches.List */ -}}
{{- $dataList = slice -}}
{{- range $i, $v := .PWA.Caches.List -}}
	{{- $data = dict -}}


	{{- /* process .URL */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "URL" $v.URL)) -}}
	{{- $ret = partial "Hestia/functions/data/url/Init" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf "PWA: Caches.%v.URL: %v"
			$i
			$ret.Console.Message
		-}}
		{{- $console = dict "Message" $console -}}
		{{- $console = merge $Page (dict "Console" $console) -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
		{{- continue -}}
	{{- end -}}
	{{- $data = merge $data (dict "URL" $ret.Output) -}}


	{{- /* process .Cache policy */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Cache)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf "PWA: Caches.%v.Cache: %v"
			$i
			$ret.Console.Message
		-}}
		{{- $console = dict "Message" $console -}}
		{{- $console = merge $Page (dict "Console" $console) -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
		{{- continue -}}
	{{- end -}}
	{{- $ret = lower $ret.Output -}}

	{{- if eq $ret "cache-first" -}}
	{{- else if eq $ret "network-first" -}}
	{{- else if eq $ret "network-only" -}}
	{{- else if eq $ret "cache-only" -}}
	{{- else if not $ret -}}
		{{- $ret = "cache-first" -}}
	{{- else -}}
		{{- $console = printf "PWA: Caches.%v.Cache: unknown policy '%v'\n"
			$i
			$ret
		-}}
		{{- $console = dict "Message" $console -}}
		{{- $console = merge $Page (dict "Console" $console) -}}
		{{- partial "Hestia/functions/console/Errorf" $console -}}
		{{- continue -}}
	{{- end -}}

	{{- $data = merge $data (dict "Cache" $ret) -}}


	{{- $dataList = append $data $dataList -}}
{{- end -}}
{{- $dataList = dict "List" $dataList -}}




{{- /* render output */ -}}
{{- return dict "Caches" $dataList -}}
