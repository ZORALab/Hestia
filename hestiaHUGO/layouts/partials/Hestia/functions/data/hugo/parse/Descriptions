{{- /* INPUT PARAMETERS */ -}}
{{- /* .  = Hugo data structure  */ -}}

{{- /* CONSTANTS */ -}}
{{- $CONFIG_FILENAME := ".page.toml" -}}




{{- /* prepare working variables for this function */ -}}
{{- $Page := . -}}
{{- $dataList := dict -}}
{{- $ret := false -}}




{{- /* parse page descriptions */ -}}
{{- if .Page.File -}}
	{{- /* get Page directory path */ -}}
	{{- $ret = path.Join (path.Dir .Page.File.Path) $CONFIG_FILENAME -}}
	{{- $ret = path.Clean $ret -}}


	{{- /* source the data file */ -}}
	{{- if fileExists $ret -}}
		{{- $ret = readFile $ret -}}
		{{- $ret = transform.Unmarshal $ret -}}


		{{- $dataList = merge $dataList (dict "Pitch" $ret.Description.Pitch) -}}
		{{- $dataList = merge $dataList (dict "Summary" $ret.Description.Summary) -}}
	{{- end -}}
{{- end -}}


{{- if .Page.Description -}}
	{{- $dataList = merge $dataList (dict "Pitch" .Page.Description) -}}
	{{- $dataList = merge $dataList (dict "Summary" .Page.Description) -}}
{{- end -}}


{{- $dataList = dict "Page" $dataList -}}




{{- /* parse site descriptions */ -}}
{{- $ret = dict -}}
{{- range $i, $v := .Site.Languages -}}
	{{- $ret = merge $ret (dict (string $v.Lang) $v.Params.description) -}}
{{- end -}}


{{- $dataList = merge $dataList (dict "Site" $ret) -}}




{{- /* render output */ -}}
{{- return dict "Descriptions" $dataList -}}
