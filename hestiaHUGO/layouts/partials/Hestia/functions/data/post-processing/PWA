{{- /* INPUT PARAMETERS */ -}}
{{- /* .  = Page data in Hestia Structure  */ -}}




{{- /* prepare working variables for this function */ -}}
{{- $Page := . -}}
{{- $dataList := dict -}}
{{- $list := slice -}}
{{- $imageList := slice -}}
{{- $image := false -}}
{{- $data := false -}}
{{- $ret := false -}}




{{- /* process .PWA.Name.Short */ -}}
{{- $ret = merge $Page (dict "Input" (dict "Data" .PWA.Name.Short)) -}}
{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
{{- $dataList = merge $dataList (dict "Name" (dict "Short" $ret)) -}}




{{- /* process .PWA.Name.Full */ -}}
{{- $ret = merge $Page (dict "Input" (dict "Data" .PWA.Name.Full)) -}}
{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
{{- $dataList = merge $dataList (dict "Name" (dict "Full" $ret)) -}}




{{- /* process .PWA.Configurations.URL */ -}}
{{- $ret = merge $Page (dict "Input" (dict "Data" .PWA.Configurations.URL)) -}}
{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
{{- $dataList = merge $dataList (dict "Configurations" (dict "URL" $ret)) -}}




{{- /* process .PWA.Configurations.Scope */ -}}
{{- $ret = merge $Page (dict "Input" (dict "Data" .PWA.Configurations.Scope)) -}}
{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
{{- $dataList = merge $dataList (dict "Configurations" (dict "Scope" $ret)) -}}




{{- /* process .PWA.Display.Orientation */ -}}
{{- $ret = merge $Page (dict "Input" (dict "Data" .PWA.Displays.Orientation)) -}}
{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
{{- $dataList = merge $dataList (dict "Displays" (dict "Orientation" $ret)) -}}




{{- /* process .PWA.Display.Overrides */ -}}
{{- $list = slice -}}
{{- range $i, $v := .PWA.Displays.Overrides -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}
	{{- $list = append $ret $list -}}
{{- end -}}
{{- $dataList = merge $dataList (dict "Displays" (dict "Overrides" $list)) -}}




{{- /* process .PWA.Descriptions.Pitch */ -}}
{{- $ret = merge $Page (dict "Input" (dict "Data" .PWA.Descriptions.Pitch)) -}}
{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
{{- $dataList = merge $dataList (dict "Descriptions" (dict "Pitch" $ret)) -}}




{{- /* process .PWA.Descriptions.Summary */ -}}
{{- $ret = merge $Page (dict "Input" (dict "Data" .PWA.Descriptions.Summary)) -}}
{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
{{- $dataList = merge $dataList (dict "Descriptions" (dict "Summary" $ret)) -}}




{{- /* process .PWA.Categories */ -}}
{{- $list = slice -}}
{{- range $i, $v := .PWA.Categories -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}
	{{- $list = append $ret $list -}}
{{- end -}}
{{- $dataList = merge $dataList (dict "Categories" $list) -}}




{{- /* process .PWA.Colors.Theme */ -}}
{{- $ret = merge $Page (dict "Input" (dict "Data" .PWA.Colors.Theme)) -}}
{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
{{- $dataList = merge $dataList (dict "Colors" (dict "Theme" $ret)) -}}




{{- /* process .PWA.Colors.Background */ -}}
{{- $ret = merge $Page (dict "Input" (dict "Data" .PWA.Colors.Background)) -}}
{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace" $ret.Output -}}
{{- $dataList = merge $dataList (dict "Colors" (dict "Background" $ret)) -}}




{{- /* process .PWA.Shortcuts */ -}}
{{- $list = slice -}}
{{- range $i, $v := .PWA.Shortcuts -}}
	{{- $data = dict -}}


	{{- /* process .PWA.Shortcuts.N.URL */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.URL)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}

	{{- if not $ret -}}
		{{- $ret = printf "given PWA Shortcut URL is invalid: %v\n"
			$v.URL -}}
		{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
		{{- partial "Hestia/functions/console/Errorf" $ret -}}
		{{- continue -}}
	{{- end -}}

	{{- $data = merge $data (dict "URL" $ret) -}}


	{{- /* process .PWA.Shortcuts.N.Name.Full */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Name.Full)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}

	{{- if not $ret -}}
		{{- $ret = printf "given PWA .Shortcut.Name.Full is invalid: %v\n"
			$v.Name.Full -}}
		{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
		{{- partial "Hestia/functions/console/Errorf" $ret -}}
		{{- continue -}}
	{{- end -}}

	{{- $data = merge $data (dict "Name" (dict "Full" $ret)) -}}


	{{- /* process .PWA.Shortcuts.N.Name.Short */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Name.Short)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}

	{{- if not $ret -}}
		{{- $ret = printf "given PWA .Shortcut.Name.Short is invalid: %v\n"
			$v.Name.Short -}}
		{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
		{{- partial "Hestia/functions/console/Errorf" $ret -}}
		{{- continue -}}
	{{- end -}}

	{{- $data = merge $data (dict "Name" (dict "Short" $ret)) -}}


	{{- /* process .PWA.Shortcuts.N.Description */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Description)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}

	{{- if not $ret -}}
		{{- $ret = printf "given PWA .Shortcut.Description is invalid: %v\n"
			$v.Description -}}
		{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
		{{- partial "Hestia/functions/console/Errorf" $ret -}}
		{{- continue -}}
	{{- end -}}

	{{- $data = merge $data (dict "Description" $ret) -}}


	{{- /* process .PWA.Shortcuts.N.Icons */ -}}
	{{- $imageList = slice -}}
	{{- range $j, $w := .PWA.Shortcuts.N.Icons -}}
		{{- $image = dict -}}

		{{- /* process .PWA.Shortcuts.N.Icons.M.URL */ -}}
		{{- $ret = merge $Page (dict "Input" (dict "Data" $w.URL)) -}}
		{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
		{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
			$ret.Output -}}

		{{- if not $ret -}}
			{{- $ret = printf "given PWA .Shortcut.%v.Icon.URL is invalid: %v\n"
				$i
				$w.URL -}}
			{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
			{{- partial "Hestia/functions/console/Errorf" $ret -}}
			{{- continue -}}
		{{- end -}}
		{{- $image = merge $image (dict "URL" $ret) -}}


		{{- /* process .PWA.Shortcuts.N.Icons.M.Type */ -}}
		{{- $ret = merge $Page (dict "Input" (dict "Data" $w.Type)) -}}
		{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
		{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
			$ret.Output -}}

		{{- if not $ret -}}
			{{- $ret = printf "given PWA .Shortcut.%v.Icon.Type is invalid: %v\n"
				$i
				$w.Type -}}
			{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
			{{- partial "Hestia/functions/console/Errorf" $ret -}}
			{{- continue -}}
		{{- end -}}
		{{- $image = merge $image (dict "Type" $ret) -}}


		{{- /* process .PWA.Shortcuts.N.Icons.M.Sizes */ -}}
		{{- $ret = merge $Page (dict "Input" (dict "Data" $w.Sizes)) -}}
		{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
		{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
			$ret.Output -}}

		{{- if not $ret -}}
			{{- $ret = printf "given PWA .Shortcut.%v.Icon.Sizes is invalid: %v\n"
				$i
				$w.Sizes -}}
			{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
			{{- partial "Hestia/functions/console/Errorf" $ret -}}
			{{- continue -}}
		{{- end -}}
		{{- $image = merge $image (dict "Sizes" $ret) -}}


		{{- /* process .PWA.Shortcuts.N.Icons.M.Purpose */ -}}
		{{- $ret = merge $Page (dict "Input" (dict "Data" $w.Purpose)) -}}
		{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
		{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
			$ret.Output -}}

		{{- if not $ret -}}
			{{- $ret = printf "given PWA .Shortcut.%v.Icon.Purpose is invalid: %v\n"
				$i
				$w.Purpose -}}
			{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
			{{- partial "Hestia/functions/console/Errorf" $ret -}}
			{{- continue -}}
		{{- end -}}
		{{- $image = merge $image (dict "Purpose" $ret) -}}


		{{- /* merge into image list */ -}}
		{{- $imageList = append $image $imageList -}}
	{{- end -}}
	{{- $data = merge $data (dict "Shortcuts" $ret) -}}
{{- end -}}
{{- $dataList = merge $dataList (dict "Shortcuts" $list) -}}




{{- /* process .Screenshots */ -}}
{{- $list = slice -}}
{{- range $i, $v := .PWA.Screenshots -}}
	{{- $image = dict -}}

	{{- /* process .PWA.Screenshots.N.URL */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.URL)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}

	{{- if not $ret -}}
		{{- $ret = printf "given .PWA.Screenshots.%v.URL is invalid: %v\n"
			$i
			$v.URL -}}
		{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
		{{- partial "Hestia/functions/console/Errorf" $ret -}}
		{{- continue -}}
	{{- end -}}
	{{- $image = merge $image (dict "URL" $ret) -}}


	{{- /* process .PWA.Screenshots.N.Type */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Type)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}

	{{- if not $ret -}}
		{{- $ret = printf "given .PWA.Screenshots.%v.Type is invalid: %v\n"
			$i
			$v.Type -}}
		{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
		{{- partial "Hestia/functions/console/Errorf" $ret -}}
		{{- continue -}}
	{{- end -}}
	{{- $image = merge $image (dict "Type" $ret) -}}


	{{- /* process .PWA.Screenshots.N.Sizes */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Sizes)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}

	{{- if not $ret -}}
		{{- $ret = printf "given .PWA.Screenshots.%v.Sizes is invalid: %v\n"
			$i
			$v.Sizes -}}
		{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
		{{- partial "Hestia/functions/console/Errorf" $ret -}}
		{{- continue -}}
	{{- end -}}
	{{- $image = merge $image (dict "Type" $ret) -}}


	{{- /* process .PWA.Screenshots.N.Platform */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Platform)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}

	{{- if not $ret -}}
		{{- $ret = printf "given .PWA.Screenshots.%v.Platform is invalid: %v\n"
			$i
			$v.Platform -}}
		{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
		{{- partial "Hestia/functions/console/Errorf" $ret -}}
		{{- continue -}}
	{{- end -}}
	{{- $image = merge $image (dict "Platform" $ret) -}}


	{{- /* merge into image list */ -}}
	{{- $imageList = append $image $imageList -}}
{{- end -}}
{{- $dataList = merge $dataList (dict "Screenshots" $list) -}}




{{- /* process .Icons */ -}}
{{- $list = slice -}}
{{- range $i, $v := .PWA.Icons -}}
	{{- $image = dict -}}

	{{- /* process .PWA.Icons.N.URL */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.URL)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}

	{{- if not $ret -}}
		{{- $ret = printf "given .PWA.Icons.%v.URL is invalid: %v\n"
			$i
			$v.URL -}}
		{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
		{{- partial "Hestia/functions/console/Errorf" $ret -}}
		{{- continue -}}
	{{- end -}}
	{{- $image = merge $image (dict "URL" $ret) -}}


	{{- /* process .PWA.Icons.N.Type */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Type)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}

	{{- if not $ret -}}
		{{- $ret = printf "given .PWA.Icons.%v.Type is invalid: %v\n"
			$i
			$v.Type -}}
		{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
		{{- partial "Hestia/functions/console/Errorf" $ret -}}
		{{- continue -}}
	{{- end -}}
	{{- $image = merge $image (dict "Type" $ret) -}}


	{{- /* process .PWA.Icons.N.Sizes */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Sizes)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}

	{{- if not $ret -}}
		{{- $ret = printf "given .PWA.Icons.%v.Sizes is invalid: %v\n"
			$i
			$v.Sizes -}}
		{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
		{{- partial "Hestia/functions/console/Errorf" $ret -}}
		{{- continue -}}
	{{- end -}}
	{{- $image = merge $image (dict "Type" $ret) -}}


	{{- /* process .PWA.Icons.N.Purpose */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Platform)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}

	{{- if not $ret -}}
		{{- $ret = printf "given .PWA.Icons.%v.Purpose is invalid: %v\n"
			$i
			$v.Platform -}}
		{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
		{{- partial "Hestia/functions/console/Errorf" $ret -}}
		{{- continue -}}
	{{- end -}}
	{{- $image = merge $image (dict "Purpose" $ret) -}}


	{{- /* merge into image list */ -}}
	{{- $list = append $image $list -}}
{{- end -}}
{{- $dataList = merge $dataList (dict "Icons" $list) -}}




{{- /* process .PWA.Relations */ -}}
{{- $list = slice -}}
{{- range $i, $v := .PWA.Relations -}}
	{{- $data = dict -}}


	{{- /* process .PWA.Relations.N.URL */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.URL)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}

	{{- if not $ret -}}
		{{- $ret = printf "given .PWA.Relations.%v.URL is invalid: %v\n"
			$i
			$v.URL -}}
		{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
		{{- partial "Hestia/functions/console/Errorf" $ret -}}
		{{- continue -}}
	{{- end -}}

	{{- $data = merge $data (dict "URL" $ret) -}}


	{{- /* process .PWA.Relations.N.Platform */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Platform)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}

	{{- if not $ret -}}
		{{- $ret = printf "given .PWA.Relations.%v.Platform is invalid: %v\n"
			$i
			$v.Platform -}}
		{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
		{{- partial "Hestia/functions/console/Errorf" $ret -}}
		{{- continue -}}
	{{- end -}}

	{{- $data = merge $data (dict "Platform" $ret) -}}


	{{- /* process .PWA.Relations.N.ID */ -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $v.ID)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $ret = partial "Hestia/functions/data/string/TrimWhitespace"
		$ret.Output -}}

	{{- if not $ret -}}
		{{- $ret = printf "given .PWA.Relations.%v.Platform is invalid: %v\n"
			$i
			$v.ID -}}
		{{- $ret = merge $Page (dict "Console" (dict "Message" $ret)) -}}
		{{- partial "Hestia/functions/console/Errorf" $ret -}}
		{{- continue -}}
	{{- end -}}

	{{- $data = merge $data (dict "ID" $ret) -}}
{{- end -}}
{{- $dataList = merge $dataList (dict "Relations" $list) -}}




{{- /* render output */ -}}
{{- $dataList = merge . (dict "PWA" $dataList) -}}
{{- return $dataList -}}
