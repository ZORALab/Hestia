{{- /* INPUT PARAMETERS */ -}}
{{- /* . = Page data in Hestia Structure */ -}}
{{- /* .Input.Name                    = media alternate text or title */ -}}
{{- /* .Input.Type                    = media MIME type */ -}}
{{- /* .Input.Width                   = media width */ -}}
{{- /* .Input.Height                  = media height */ -}}
{{- /* .Input.CORS                    = media cross-origin value */ -}}
{{- /* .Input.PreLoad                 = media pre-load value */ -}}
{{- /* .Input.Control                 = media control flag */ -}}
{{- /* .Input.Autoplay                = media autoplay flag */ -}}
{{- /* .Input.Loop                    = media looping flag */ -}}
{{- /* .Input.Mute                    = media audio mute flag */ -}}
{{- /* .Input.Inline                  = media play inline flag */ -}}
{{- /* .Input.Tracks.[LANG].Label     = media track label */ -}}
{{- /* .Input.Tracks.[LANG].Kind      = media track kind */ -}}
{{- /* .Input.Tracks.[LANG].Default   = media track default flag */ -}}
{{- /* .Input.Tracks.[LANG].Source    = media track file (e.g. VTT) URL */ -}}
{{- /* .Input.Sources.[ARRAY_N].URL   = media source URL */ -}}
{{- /* .Input.Sources.[ARRAY_N].Type  = media source MIME type */ -}}
{{- /* .Input.Sources.[ARRAY_N].Media = media source media query */ -}}




{{- /* prepare working variables for this function */ -}}
{{- $Page := . -}}
{{- $dataList := dict -}}
{{- $console := dict -}}
{{- $ret := false -}}




{{- /* STAGE 1: PROCESS */ -}}
{{- /* process .Name */ -}}
{{- $ret = partial "Hestia/functions/data/media/_name" . -}}
{{- $dataList = merge $dataList (dict "Name" $ret.Output) -}}
{{- if and $ret.Console (not $console) -}}
	{{- $console = printf "Picture.Name: %s" $ret.Console -}}
	{{- $console = dict "Message" $console -}}
{{- end -}}


{{- /* process .Type */ -}}
{{- $ret = partial "Hestia/functions/data/media/_type" . -}}
{{- $dataList = merge $dataList (dict "Type" $ret.Output) -}}
{{- if and $ret.Console (not $console) -}}
	{{- $console = printf "Picture.Type: %s" $ret.Console -}}
	{{- $console = dict "Message" $console -}}
{{- end -}}


{{- /* process .Width */ -}}
{{- $ret = partial "Hestia/functions/data/media/_width" . -}}
{{- $dataList = merge $dataList (dict "Width" $ret.Output) -}}
{{- if and $ret.Console (not $console) -}}
	{{- $console = printf "Picture.Width: %s" $ret.Console -}}
	{{- $console = dict "Message" $console -}}
{{- end -}}


{{- /* process .Height */ -}}
{{- $ret = partial "Hestia/functions/data/media/_height" . -}}
{{- $dataList = merge $dataList (dict "Height" $ret.Output) -}}
{{- if and $ret.Console (not $console) -}}
	{{- $console = printf "Picture.Height: %s" $ret.Console -}}
	{{- $console = dict "Message" $console -}}
{{- end -}}




{{- /* STAGE 2: POST-PROCESS */ -}}
{{- /* process .Sizes */ -}}
{{- $ret = "" -}}
{{- if and $dataList.Width $dataList.Height -}}
	{{- $ret = printf "%dx%d" $dataList.Width $dataList.Height -}}
{{- end -}}
{{- $dataList = merge $dataList (dict "Sizes" $ret) -}}




{{- /* render output */ -}}
{{- $dataList = dict "Output" $dataList "Console" $console -}}
{{- return $dataList -}}
