{{- /* INPUT PARAMETERS */ -}}
{{- /* . = Page data in Hestia Structure */ -}}
{{- /* .URL.Current = Current Page URL. */ -}}
{{- /* .URL.Base = Current Page's Base URL. */ -}}
{{- /* .Formats.Current = Current Page's Format File Type. */ -}}
{{- /* .Languages.Current = Current Page's Language. */ -}}

{{- /* .Input.URL = given URL in any form for synthesis. (string) */ -}}
{{- /* .Input.Format = desired output format. (optional, string) */ -}}
{{- /* .Input.Lang = desired language. (optional, string) */ -}}




{{- /* prepare working variables for this function */ -}}
{{- $Page := partial "Hestia/functions/data/Clean" . -}}
{{- $Args := dict -}}
{{- $dataList := dict -}}
{{- $console := dict -}}
{{- $ret := false -}}
{{- $list := false -}}




{{- /* process .Input.URL */ -}}
{{- $ret = merge . (dict "Input" (dict "Query" ".Input.URL")) -}}
{{- $ret = partial "Hestia/functions/data/Get" $ret -}}
{{- if not $ret -}}
	{{- $ret = "" -}}
{{- end -}}


{{- if (partial "Hestia/functions/data/string/IsString" $ret)
	| or (partial "Hestia/functions/data/url/IsURL" $ret) -}}
	{{- $ret = string $ret -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- if $ret.Console -}}
		{{- $console = printf "URL: .Input.URL: %s" $ret.Console -}}
		{{- $console = dict "Message" $console -}}
	{{- end -}}

	{{- $ret = dict "URL" $ret.Output -}}
	{{- $ret = dict "Input" $ret -}}
	{{- $Args = merge $Page $ret -}}
{{- else -}}
	{{- $console = printf "URL: unknown .Input.URL type: %T for %v\n"
		.Input.URL .Input.URL -}}
	{{- $console = dict "Message" $console -}}
{{- end -}}




{{- /* process .Input.Lang */ -}}
{{- $ret = merge . (dict "Input" (dict "Query" ".Input.Lang")) -}}
{{- $ret = partial "Hestia/functions/data/Get" $ret -}}
{{- if not $ret -}}
	{{- $ret = "" -}}
{{- end -}}
{{- if and $ret (not $console) -}}
	{{- $ret = string $ret -}}
	{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- $Args = merge $Args (dict "Input" (dict "Lang" $ret.Output)) -}}
	{{- if $ret.Console -}}
		{{- $console = printf "URL: .Input.Lang: %s" $ret.Console -}}
		{{- $console = dict "Message" $console -}}
	{{- end -}}
{{- end -}}




{{- /* scan for supported .Input.Format */ -}}
{{- $list = merge . (dict "Input" (dict "Query" ".Input.Format")) -}}
{{- $list = partial "Hestia/functions/data/Get" $ret -}}
{{- if not $list -}}
	{{- $list = dict -}}
{{- end -}}

{{- $ret = dict -}}
{{- range $k, $v := .Formats.List -}}
	{{- if eq $list.Name $v.Format.Name -}}
		{{- $ret = $v -}}
	{{- end -}}
{{- end -}}
{{- $list = $ret -}}




{{- /* process .Input.Format */ -}}
{{- if and $list (not $console) -}}
	{{- /* process .Input.Format.Protocol */ -}}
	{{- $ret = merge $list (dict "Input" (dict "Query" ".Protocol")) -}}
	{{- $ret = partial "Hestia/functions/data/Get" $ret -}}
	{{- if not $ret -}}
		{{- $ret = "" -}}
	{{- end -}}
	{{- $ret = string $ret -}}

	{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- if and $ret.Console (not $console) -}}
		{{- $console = printf "URL: .Input.Format.Protocol: %s"
			$ret.Console -}}
		{{- $console = dict "Message" $console -}}
	{{- end -}}
	{{- $ret = dict "Protocol" $ret.Output -}}
	{{- $ret = dict "Format" $ret -}}
	{{- $ret = dict "Input" $ret -}}
	{{- $Args = merge $Args $ret -}}


	{{- /* process .Input.Format.Filename */ -}}
	{{- $list = $ret -}}
	{{- $ret = merge $list (dict "Input" (dict "Query" ".Filename")) -}}
	{{- $ret = partial "Hestia/functions/data/Get" $ret -}}
	{{- if not $ret -}}
		{{- $ret = "" -}}
	{{- end -}}
	{{- $ret = string $ret -}}

	{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- if and $ret.Console (not $console) -}}
		{{- $console = printf "URL: .Input.Format.Filename: %s"
			$ret.Console -}}
		{{- $console = dict "Message" $console -}}
	{{- end -}}
	{{- $ret = dict "Filename" $ret.Output -}}
	{{- $ret = dict "Format" $ret -}}
	{{- $ret = dict "Input" $ret -}}
	{{- $Args = merge $Args $ret -}}


	{{- /* process .Input.Format.Extension */ -}}
	{{- $list = $ret -}}
	{{- $ret = merge $list (dict "Input" (dict "Query" ".Extension")) -}}
	{{- $ret = partial "Hestia/functions/data/Get" $ret -}}
	{{- if not $ret -}}
		{{- $ret = "" -}}
	{{- end -}}
	{{- $ret = string $ret -}}

	{{- $ret = merge $Page (dict "Input" (dict "Data" $ret)) -}}
	{{- $ret = partial "Hestia/functions/data/string/Init" $ret -}}
	{{- if and $ret.Console (not $console) -}}
		{{- $console = printf "URL: .Input.Format.Extension: %s"
			$ret.Console -}}
		{{- $console = dict "Message" $console -}}
	{{- end -}}
	{{- $ret = dict "Extension" $ret.Output -}}
	{{- $ret = dict "Format" $ret -}}
	{{- $ret = dict "Input" $ret -}}
	{{- $Args = merge $Args $ret -}}
{{- end -}}




{{- /* allow to process the URL */ -}}
{{- if not $console -}}
	{{- $ret = partial "Hestia/functions/data/url/_process" $Args -}}
	{{- if and $ret.Console (not $console) -}}
		{{- $console = printf "URL: %s" $ret.Console -}}
		{{- $console = dict "Message" $console -}}
	{{- end -}}

	{{- $dataList = $ret.Output -}}
{{- end -}}




{{- /* render output */ -}}
{{- return dict "Output" $dataList "Console" $console -}}
