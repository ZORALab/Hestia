[Metadata]
Name = 'Go'
Description = """
Using Go test to test out all the Go codes in this repository.
"""




[Variables]
Timeout = '14400s'

[FMTVariables]
ProfileFilepath = '{{- .WorkingDir -}}/go-profile.txt'
CoverageFilepath = '{{- .WorkingDir -}}/go-coverage.html'
TestPath = '{{- .BaseDir -}}/...'
TestCoverage = '' # will be overwritten by [CMD]
TestVerdict = '' # will be overwritten by [CMD]




[[Dependencies]]
Name = 'Go'
Condition = 'all-all'
Type = 'command'
Command = 'go'




[[CMD]]
Name = "Create Test Directory For Housing Test Data"
Type = 'create-path'
Condition = [ 'all-all' ]
Source = '{{- .WorkingDir -}}'

[[CMD]]
Name = "Run Go Test Against Base Directory"
Type = 'command-quiet'
Condition = [ 'all-all' ]
Location = '{{- .BaseDir -}}'
Source = """go test -timeout "{{ .Timeout }}" \
-coverprofile "{{- .ProfileFilepath -}}" \
-race \
-v \
"{{- .TestPath -}}"
"""
Save = 'TestVerdict'
SaveRegex = '(FAIL)\s*$'

[[CMD]]
Name = "Process Go Test Coverage Profiles"
Type = 'command'
Condition = [ 'all-all' ]
Location = '{{- .BaseDir -}}'
Source = """go tool cover -html="{{- .ProfileFilepath -}}" \
	-o "{{- .CoverageFilepath -}}"
"""

[[CMD]]
Name = 'Process Go Test Coverage Overall Percentage'
Type = 'command'
Condition = [ 'all-all' ]
Location = '{{- .BaseDir -}}'
Source = 'go tool cover -func "{{- .ProfileFilepath -}}"'
Save = 'TestCoverage'
SaveRegex = 'total:\s{1,}\(statements\)\s{1,}(\d+.\d+)%'
ToSTDOUT = 'TOTAL TEST COVERAGE: {{ .TestCoverage -}}%%'

[[CMD]]
Name = 'Conclude The Test'
Type = 'is-equal'
Condition = [ 'all-all' ]
Source = '{{- .TestVerdict -}}'
Target = ''
