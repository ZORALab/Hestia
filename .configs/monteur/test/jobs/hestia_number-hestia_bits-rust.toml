[Metadata]
Name = 'HestiaRUST/hestia_number/hestia_bits Rust Module Test Recipe'
Description = """
Using Rust testing feature to test out this package with test coverage heatmap.
"""




[Variables]
Module = 'hestia_number::hestia_bits' # Rust's Module Convention
ModuleDir = 'hestia_number/hestia_bits' # Module directory path
ReportDir = 'archives/data/test/rust/hestia_number/hestia_bits'

[FMTVariables]
SubjectDir = '{{- .RootDir -}}/hestiaRUST/{{- .ModuleDir -}}'
TargetDir = '{{- .WorkingDir -}}/{{- .ModuleDir -}}'
ReportPath = '{{- .RootDir -}}/{{- .ReportDir -}}/rust-report.json'

# The following shall be overwritten by [CMD]
TestCoverage = ''
TestVerdict = ''




[[Dependencies]]
Name = 'Rust Compiler'
Condition = 'all-all'
Type = 'command'
Command = 'rustc'

[[Dependencies]]
Name = 'Rust Cargo'
Condition = 'all-all'
Type = 'command'
Command = 'cargo'




[[CMD]]
Name = "Create Test Directory For Housing Test Data"
Type = 'create-path'
Condition = [ 'all-all' ]
Source = '{{- .TargetDir -}}'


[[CMD]]
Name = "Run Rust's Cargo Test Against Subject Directory"
Type = 'command-quiet'
Condition = [ 'all-all' ]
Location = '{{- .SubjectDir -}}'
Source = """cargo test \
--all-targets \
--all-features \
--target-dir "{{- .TargetDir -}}" \
{{ .Module }} -- \
--show-output
"""
Save = 'TestVerdict'
SaveRegex = '(FAIL)\s*$'


[[CMD]]
Name = 'Delete Rust Test Report JSON Data File'
Type = 'delete-quiet'
Condition = [ 'all-all' ]
Source = '{{- .ReportPath -}}'


[[CMD]]
Name = 'Script Rust Test Report JSON Data File'
Type = 'script'
Condition = [ 'all-all' ]
Source = """
{
	"Result": {
		"Compiler": "Rust Compiler and Cargo Test",
		"Architecture": "{{- .Arch -}}",
		"OS": "{{- .OS -}}",
		"System": "{{- .ComputeSystem -}}",
		"Coverage": "{{- .TestCoverage -}}",
		"Passed": {{- eq .TestVerdict "" }}
	}
}
"""
Target = '{{- .ReportPath -}}'


[[CMD]]
Name = 'Conclude The Test'
Type = 'is-equal'
Condition = [ 'all-all' ]
Source = '{{- .TestVerdict -}}'
Target = ''
