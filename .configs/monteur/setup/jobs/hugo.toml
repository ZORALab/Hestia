[Metadata]
Name = 'Hugo'
Description = """
Setup Hugo static website generator for web publications.
"""
Type = 'https-download'




[Variables]
Version = '0.110.0'
BaseURL = 'https://github.com/gohugoio/hugo/releases/download'

[FMTVariables]




# Supported OS and CPU Architectures program sources. The Key for supported
# OS and CPU complies to the format:
#	[Sources.{GOOS}-{GOARCH}]
# Only list out supported packages will do.
[Sources.all-all]
Format = 'tar.gz'
URL = '{{- .BaseURL -}}/v{{- .Version -}}/{{- .Archive -}}'
Method = 'GET'
Archive = 'hugo_{{- .Version -}}_{{- .ComputeSystem -}}.{{- .Format -}}'
[Sources.all-all.Checksum]
Type = 'sha256'
Format = 'hex'
[Sources.all-all.headers]

[Sources.dragonfly-amd64]
[Sources.dragonfly-amd64.Checksum]
Value = 'd2a4d5f3bca15d3d64e4471a9110c3d89683ce09d83095928ba2cf88d5147343'

[Sources.freebsd-amd64]
[Sources.freebsd-amd64.Checksum]
Value = '74054865265a8510155c2529d859de9bc2410f98d8425ebf40d0caf61e303750'

[Sources.linux-amd64]
[Sources.linux-amd64.Checksum]
Value = 'a1c97b69a96040e0911f8ce8c9718553c333727b5ffa969e59635837e3b4dcc3'

[Sources.linux-arm64]
[Sources.linux-arm64.Checksum]
Value = 'd1d5d42bf7bc7a69d2a417587f532317f10794a4a8d8b8ca704fd704da5838f1'

[Sources.darwin-amd64]
Archive = 'hugo_{{- .Version -}}_darwin-universal.{{- .Format -}}'
[Sources.darwin-amd64.Checksum]
Value = '5c70a4d83a7633a289697e07e6ffd9f02c6f05b43210c257f59a2ca203967218'

[Sources.darwin-arm64]
Archive = 'hugo_{{- .Version -}}_darwin-universal.{{- .Format -}}'
[Sources.darwin-arm64.Checksum]
Value = '5c70a4d83a7633a289697e07e6ffd9f02c6f05b43210c257f59a2ca203967218'

[Sources.netbsd-amd64]
[Sources.netbsd-amd64.Checksum]
Value = '6b5a169215aeb705d27e48df1fe24467b78caff09c6519484ef1b957018880c8'

[Sources.openbsd-amd64]
[Sources.openbsd-amd64.Checksum]
Value = '9530938283ab626df59879358851cc5d2e02d4da46271ff2bae3533ece78a845'

[Sources.windows-amd64]
Format = 'zip'
[Sources.windows-amd64.Checksum]
Value = '1bc605c3d46aa869ca8cede33b8428f5304d011307ad08a27c1a7ec75d3ac682'

[Sources.windows-arm64]
Format = 'zip'
[Sources.windows-arm64.Checksum]
Value = '6391f8060732f2def24eac51bca298bcf4f10b6af95d49a8fb323cfdd909e84f'




[[CMD]]
Name = 'Delete Target for Installation'
Type = 'delete-recursive-quiet'
Condition = ['all-all']
Source = '{{- .BinDir -}}/hugo'

[[CMD]]
Name = 'Install Go Hugo'
Type = 'move'
Condition = [ 'all-all' ]
Source = '{{- .WorkingDir -}}/hugo'
Target = '{{- .BinDir -}}/hugo'




# Config file for localized filesystem initialization.
[Config]
linux = """
#!/bin/bash

_name="hugo"

case $1 in
--stop)
	;;
*)
	if [ ! -z "$(type -p "$_name")" ]; then
		1>&2 printf "[ DONE  ] '$_name' is available.\\n"
	else
		1>&2 printf "[ ERROR ] '$_name' is missing.\\n"
	fi
	;;
esac
"""
