[Metadata]
Name = 'Hugo'
Description = """
Setup Hugo static website generator for web publications.
"""
Type = 'https-download'




[Variables]
Version = '0.104.3'
BaseURL = 'https://github.com/gohugoio/hugo/releases/download'

[FMTVariables]




# Supported OS and CPU Architectures program sources. The Key for supported
# OS and CPU complies to the format:
#	[Sources.{GOOS}-{GOARCH}]
# Only list out supported packages will do.
[Sources.all-all]
Format = 'tar.gz'
URL = '{{- .BaseURL -}}/v{{- .Version -}}/{{- .Archive -}}'
Method = 'GET'
Archive = 'hugo_{{- .Version -}}_{{- .ComputeSystem -}}.{{- .Format -}}'
[Sources.all-all.Checksum]
Type = 'sha256'
Format = 'hex'
[Sources.all-all.headers]

[Sources.dragonfly-amd64]
[Sources.dragonfly-amd64.Checksum]
Value = 'e1efcddd8d7a38479a67b4d96f38445b12704c245a5d6470a7a38518b9b0bbdb'

[Sources.freebsd-amd64]
[Sources.freebsd-amd64.Checksum]
Value = '040ce2b32238554951b15276d1dcb14bbe6a747bbfc6ee7e02d119158388707e'

[Sources.linux-amd64]
[Sources.linux-amd64.Checksum]
Value = 'da45809872c2c3a318c277adcacd80d00f4e0cd4527640f67055beac3b642333'

[Sources.linux-arm64]
[Sources.linux-arm64.Checksum]
Value = 'e14c9402873fb6b6bb676d7c5ebf1af60a0cd9473d56a759324fcd71032c59a5'

[Sources.darwin-amd64]
Archive = 'hugo_{{- .Version -}}_darwin-universal.{{- .Format -}}'
[Sources.darwin-amd64.Checksum]
Value = 'd353c5081d9beb228ac61c943a37051706e5c71f60a1cbac30559834d03ea98d'

[Sources.darwin-arm64]
Archive = 'hugo_{{- .Version -}}_darwin-universal.{{- .Format -}}'
[Sources.darwin-arm64.Checksum]
Value = 'd353c5081d9beb228ac61c943a37051706e5c71f60a1cbac30559834d03ea98d'

[Sources.netbsd-amd64]
[Sources.netbsd-amd64.Checksum]
Value = '91617c1415044d3cb6bc92942da79e3ba06dc8ceb695af80d0c633752f821770'

[Sources.openbsd-amd64]
[Sources.openbsd-amd64.Checksum]
Value = '4912a709dbe0c1bdb472f7b1f93ceaf66b8bb3e926be5847678f0777a09be3e4'

[Sources.windows-amd64]
Format = 'zip'
[Sources.windows-amd64.Checksum]
Value = '2c8ffd8283b819cd2c6f6cefbd27ffb070c15402e4e2a01395da948f8ab05769'

[Sources.windows-arm64]
Format = 'zip'
[Sources.windows-arm64.Checksum]
Value = '04e78edbdcc78c1a3a2e5ddb138e5ae5328cddcfd39c21a21eeb4497c45d9d6d'




[[CMD]]
Name = 'Delete Target for Installation'
Type = 'delete-recursive-quiet'
Condition = ['all-all']
Source = '{{- .BinDir -}}/hugo'

[[CMD]]
Name = 'Install Go Hugo'
Type = 'move'
Condition = [ 'all-all' ]
Source = '{{- .WorkingDir -}}/hugo'
Target = '{{- .BinDir -}}/hugo'




# Config file for localized filesystem initialization.
[Config]
linux = """
#!/bin/bash

_name="hugo"

case $1 in
--stop)
	;;
*)
	if [ ! -z "$(type -p "$_name")" ]; then
		1>&2 printf "[ DONE  ] '$_name' is available.\\n"
	else
		1>&2 printf "[ ERROR ] '$_name' is missing.\\n"
	fi
	;;
esac
"""
