[Metadata]
Name = 'Hugo'
Description = """
Setup Hugo static website generator for web publications.
"""
Type = 'https-download'




[Variables]
Version = '0.101.0'
BaseURL = 'https://github.com/gohugoio/hugo/releases/download'

[FMTVariables]




# Supported OS and CPU Architectures program sources. The Key for supported
# OS and CPU complies to the format:
#	[Sources.{GOOS}-{GOARCH}]
# Only list out supported packages will do.
[Sources.all-all]
Format = 'tar.gz'
URL = '{{- .BaseURL -}}/v{{- .Version -}}/{{- .Archive -}}'
Method = 'GET'
[Sources.all-all.Checksum]
Type = 'sha256'
Format = 'hex'
[Sources.all-all.headers]

[Sources.dragonfly-amd64]
Archive = 'hugo_{{- .Version -}}_DragonFlyBSD-64bit.{{- .Format -}}'
[Sources.dragonfly-amd64.Checksum]
Value = 'cd12d7e35f714e9ff2b78b77e31ce8a87945260ca43e392ffa75dbece6ccc878'

[Sources.freebsd-amd64]
Archive = 'hugo_{{- .Version -}}_FreeBSD-64bit.{{- .Format -}}'
[Sources.freebsd-amd64.Checksum]
Value = '8aa4c786b55d9a39d72983e49dec95eeb8f047998f2efa38218dd20a3dd46f78'

[Sources.linux-386]
Archive = 'hugo_{{- .Version -}}_Linux-32bit.{{- .Format -}}'
[Sources.linux-386.Checksum]
Value = '9ae794edd86415a611cae15fc72382ee6f2b729754e15319c144057a5457eaed'

[Sources.linux-amd64]
Archive = 'hugo_{{- .Version -}}_Linux-64bit.{{- .Format -}}'
[Sources.linux-amd64.Checksum]
Value = '3a22bf2b467b861afa62bd0cd1c0bbd18e2c95cac0e0b61f3c7c8459c2b313eb'

[Sources.linux-arm]
Archive = 'hugo_{{- .Version -}}_Linux-ARM.{{- .Format -}}'
[Sources.linux-arm.Checksum]
Value = '86a0b8b71d41d0a7ec7cac6690c0be39799192899d3e477970f1f9a233746080'

[Sources.linux-arm64]
Archive = 'hugo_{{- .Version -}}_Linux-ARM64.{{- .Format -}}'
[Sources.linux-arm64.Checksum]
Value = '02787420d516c9db2040cbc2926586cd9198c2e4dde15731196ccc2d9796df92'

[Sources.darwin-amd64]
Archive = 'hugo_{{- .Version -}}_macOS-64bit.{{- .Format -}}'
[Sources.darwin-amd64.Checksum]
Value = '812f3826f2509e18e33e27be742fb6361754544b776be8e30f9143a6eb54b36f'

[Sources.darwin-arm64]
Archive = 'hugo_{{- .Version -}}_macOS-ARM64.{{- .Format -}}'
[Sources.darwin-arm64.Checksum]
Value = '59e39000f29690d2fa800100e9c98483215f99ff4e1af8071ac1f0fc04888c3b'

[Sources.netbsd-amd64]
Archive = 'hugo_{{- .Version -}}_NetBSD-64bit.{{- .Format -}}'
[Sources.netbsd-amd64.Checksum]
Value = '880e74869a383322cfa4e29b7b941440cf001b106f5df4c558ab6aa0b4f7016c'

[Sources.openbsd-amd64]
Archive = 'hugo_{{- .Version -}}_OpenBSD-64bit.{{- .Format -}}'
[Sources.openbsd-amd64.Checksum]
Value = '0f266bafba73a8e211ff9f62a76a1311f78adf4fa7137e6615b418fb293ab192'

[Sources.windows-386]
Format = 'zip'
Archive = 'hugo_{{- .Version -}}_Windows-32bit.{{- .Format -}}'
[Sources.windows-386.Checksum]
Value = '56d47716de0a87aa0d74e11fdc83393124f64bcc745ee1ab8836daa263b9d566'

[Sources.windows-amd64]
Format = 'zip'
Archive = 'hugo_{{- .Version -}}_Windows-64bit.{{- .Format -}}'
[Sources.windows-amd64.Checksum]
Value = '149908ea5eb554d77e4ad53a92d6d712582ebc9bde95ae9fa06f62a7c0b4f0b5'

[Sources.windows-arm]
Format = 'zip'
Archive = 'hugo_{{- .Version -}}_Windows-ARM.{{- .Format -}}'
[Sources.windows-arm.Checksum]
Value = '705a123b4a3cdf2bad13680907a8d4fc93dd87c83ff34ef3976e42a0b2d9015f'

[Sources.windows-armv7]
Format = 'zip'
Archive = 'hugo_{{- .Version -}}_Windows-ARM.{{- .Format -}}'
[Sources.windows-armv7.Checksum]
Value = '705a123b4a3cdf2bad13680907a8d4fc93dd87c83ff34ef3976e42a0b2d9015f'

[Sources.windows-arm64]
Format = 'zip'
Archive = 'hugo_{{- .Version -}}_Windows-ARM64.{{- .Format -}}'
[Sources.windows-arm64.Checksum]
Value = '5a1cf7ce18487f08e3f4324dfed5cf769f9a4f4b690899bd74572e956c9b0cc3'




[[CMD]]
Name = 'Delete Target for Installation'
Type = 'delete-recursive-quiet'
Condition = ['all-all']
Source = '{{- .BinDir -}}/hugo'

[[CMD]]
Name = 'Install Go Hugo'
Type = 'move'
Condition = [ 'all-all' ]
Source = '{{- .WorkingDir -}}/hugo'
Target = '{{- .BinDir -}}/hugo'




# Config file for localized filesystem initialization.
[Config]
linux = """
#!/bin/bash

_name="hugo"

case $1 in
--stop)
	;;
*)
	if [ ! -z "$(type -p "$_name")" ]; then
		1>&2 printf "[ DONE  ] '$_name' is available.\\n"
	else
		1>&2 printf "[ ERROR ] '$_name' is missing.\\n"
	fi
	;;
esac
"""
