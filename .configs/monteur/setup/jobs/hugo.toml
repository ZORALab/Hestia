[Metadata]
Name = 'Hugo'
Description = """
Setup Hugo static website generator for web publications.
"""
Type = 'https-download'




[Variables]
Version = '0.109.0'
BaseURL = 'https://github.com/gohugoio/hugo/releases/download'

[FMTVariables]




# Supported OS and CPU Architectures program sources. The Key for supported
# OS and CPU complies to the format:
#	[Sources.{GOOS}-{GOARCH}]
# Only list out supported packages will do.
[Sources.all-all]
Format = 'tar.gz'
URL = '{{- .BaseURL -}}/v{{- .Version -}}/{{- .Archive -}}'
Method = 'GET'
Archive = 'hugo_{{- .Version -}}_{{- .ComputeSystem -}}.{{- .Format -}}'
[Sources.all-all.Checksum]
Type = 'sha256'
Format = 'hex'
[Sources.all-all.headers]

[Sources.dragonfly-amd64]
[Sources.dragonfly-amd64.Checksum]
Value = 'dd6de881bd2ff4d08b378a81d7f3d340fe3b621ceb56a9c783535c6e5e9124f9'

[Sources.freebsd-amd64]
[Sources.freebsd-amd64.Checksum]
Value = '938e3e7cf0335a89e4cf28c8b8c422b1cb5497e2672921bd50096338ad03dca0'

[Sources.linux-amd64]
[Sources.linux-amd64.Checksum]
Value = '36cfd9a0c4e0a084c3b4d2802d408211d2599cab960f223eb10b433579634d9c'

[Sources.linux-arm64]
[Sources.linux-arm64.Checksum]
Value = '40d1906e5d389f899f07cfe35320c90d205a41f0d1633aa8ac8b5f02113a430e'

[Sources.darwin-amd64]
Archive = 'hugo_{{- .Version -}}_darwin-universal.{{- .Format -}}'
[Sources.darwin-amd64.Checksum]
Value = '5f89380760a6bb7c3b4156614c4772ee740f298b2e8b18c7f053c3ec334a8cad'

[Sources.darwin-arm64]
Archive = 'hugo_{{- .Version -}}_darwin-universal.{{- .Format -}}'
[Sources.darwin-arm64.Checksum]
Value = '5f89380760a6bb7c3b4156614c4772ee740f298b2e8b18c7f053c3ec334a8cad'

[Sources.netbsd-amd64]
[Sources.netbsd-amd64.Checksum]
Value = '50a1055a59e2d29b38773447eb9a060e60e7385c7fda592af1194d311c33bc09'

[Sources.openbsd-amd64]
[Sources.openbsd-amd64.Checksum]
Value = '47c8e4c77e87216e3502ac9da5b261b62d22522e0d290b24939dcff24664f12e'

[Sources.windows-amd64]
Format = 'zip'
[Sources.windows-amd64.Checksum]
Value = '7653cbc94a8faa05ee0a77bf31d5548ecbdeda08be9c44057dcbdefe426fff40'

[Sources.windows-arm64]
Format = 'zip'
[Sources.windows-arm64.Checksum]
Value = '01a58d0d2abf50045dc07b074add3d01d19cc29baa64dd69abda3875e7b537fb'




[[CMD]]
Name = 'Delete Target for Installation'
Type = 'delete-recursive-quiet'
Condition = ['all-all']
Source = '{{- .BinDir -}}/hugo'

[[CMD]]
Name = 'Install Go Hugo'
Type = 'move'
Condition = [ 'all-all' ]
Source = '{{- .WorkingDir -}}/hugo'
Target = '{{- .BinDir -}}/hugo'




# Config file for localized filesystem initialization.
[Config]
linux = """
#!/bin/bash

_name="hugo"

case $1 in
--stop)
	;;
*)
	if [ ! -z "$(type -p "$_name")" ]; then
		1>&2 printf "[ DONE  ] '$_name' is available.\\n"
	else
		1>&2 printf "[ ERROR ] '$_name' is missing.\\n"
	fi
	;;
esac
"""
