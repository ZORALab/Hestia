[Metadata]
Name = 'Hugo'
Description = """
Setup Hugo static website generator for web publications.
"""
Type = 'https-download'




[Variables]
Version = '0.104.0'
BaseURL = 'https://github.com/gohugoio/hugo/releases/download'

[FMTVariables]




# Supported OS and CPU Architectures program sources. The Key for supported
# OS and CPU complies to the format:
#	[Sources.{GOOS}-{GOARCH}]
# Only list out supported packages will do.
[Sources.all-all]
Format = 'tar.gz'
URL = '{{- .BaseURL -}}/v{{- .Version -}}/{{- .Archive -}}'
Method = 'GET'
Archive = 'hugo_{{- .Version -}}_{{- .ComputeSystem -}}.{{- .Format -}}'
[Sources.all-all.Checksum]
Type = 'sha256'
Format = 'hex'
[Sources.all-all.headers]

[Sources.dragonfly-amd64]
[Sources.dragonfly-amd64.Checksum]
Value = '5bc33656a72ba477b94ae3e188954f39dfad42e4fddc280d3e344563e0ab26a9'

[Sources.freebsd-amd64]
[Sources.freebsd-amd64.Checksum]
Value = '791f8503438c5a9b543edb99154ef9c6091bee2231793ff20ea0b8c54c058679'

[Sources.linux-amd64]
[Sources.linux-amd64.Checksum]
Value = 'df4bcd7926e52710213de29b391f458726ffb48c84be889baaac94c0f89f056c'

[Sources.linux-arm64]
[Sources.linux-arm64.Checksum]
Value = 'eb3fe554fa9fa9ebe995feecd9da2cfe2dc202b98b3a417d9876a8ee2a3bc9cb'

[Sources.darwin-amd64]
Archive = 'hugo_{{- .Version -}}_darwin-universal.{{- .Format -}}'
[Sources.darwin-amd64.Checksum]
Value = 'c640c20efc3c2685b75a6243a48ef99e5a666a1b1caa21fbe0e404dfd4f54966'

[Sources.darwin-arm64]
Archive = 'hugo_{{- .Version -}}_darwin-universal.{{- .Format -}}'
[Sources.darwin-arm64.Checksum]
Value = 'c640c20efc3c2685b75a6243a48ef99e5a666a1b1caa21fbe0e404dfd4f54966'

[Sources.netbsd-amd64]
[Sources.netbsd-amd64.Checksum]
Value = 'a64f2760be228d903216873ec303ee860b466fe1d0859869d2a47bcde0e4ac24'

[Sources.openbsd-amd64]
[Sources.openbsd-amd64.Checksum]
Value = '127a6943182d9d9a31012dff16452f010cfebebe85f66cf2cc47469731f4e2c8'

[Sources.windows-amd64]
Format = 'zip'
[Sources.windows-amd64.Checksum]
Value = '5d8c87788945f24ab724d9448f3d6d518e6aed1e43cf4d7fd116398b66c584bd'

[Sources.windows-arm64]
Format = 'zip'
[Sources.windows-arm64.Checksum]
Value = '7c30da75dc0c7c177e0e743ebb1f728d249ed4fac9bdada686218904c34c80b1'




[[CMD]]
Name = 'Delete Target for Installation'
Type = 'delete-recursive-quiet'
Condition = ['all-all']
Source = '{{- .BinDir -}}/hugo'

[[CMD]]
Name = 'Install Go Hugo'
Type = 'move'
Condition = [ 'all-all' ]
Source = '{{- .WorkingDir -}}/hugo'
Target = '{{- .BinDir -}}/hugo'




# Config file for localized filesystem initialization.
[Config]
linux = """
#!/bin/bash

_name="hugo"

case $1 in
--stop)
	;;
*)
	if [ ! -z "$(type -p "$_name")" ]; then
		1>&2 printf "[ DONE  ] '$_name' is available.\\n"
	else
		1>&2 printf "[ ERROR ] '$_name' is missing.\\n"
	fi
	;;
esac
"""
