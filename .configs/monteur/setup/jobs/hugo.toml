[Metadata]
Name = 'Hugo'
Description = """
Setup Hugo static website generator for web publications.
"""
Type = 'https-download'




[Variables]
Version = '0.111.3'
BaseURL = 'https://github.com/gohugoio/hugo/releases/download'

[FMTVariables]




# Supported OS and CPU Architectures program sources. The Key for supported
# OS and CPU complies to the format:
#	[Sources.{GOOS}-{GOARCH}]
# Only list out supported packages will do.
[Sources.all-all]
Format = 'tar.gz'
URL = '{{- .BaseURL -}}/v{{- .Version -}}/{{- .Archive -}}'
Method = 'GET'
Archive = 'hugo_{{- .Version -}}_{{- .ComputeSystem -}}.{{- .Format -}}'
[Sources.all-all.Checksum]
Type = 'sha256'
Format = 'hex'
[Sources.all-all.headers]

[Sources.dragonfly-amd64]
[Sources.dragonflyi-amd64.Checksum]
Value = 'd43726143c31cb139d94d5cd104baab7cc64e45a08d4b823e78e5e61d699d107'

[Sources.freebsd-amd64]
[Sources.freebsd-amd64.Checksum]
Value = 'be8d78aaf1ab1fecb82b22a165ed4dda5955e9db86ae6a38651ef339ccbb962c'

[Sources.linux-amd64]
[Sources.linux-amd64.Checksum]
Value = '61500f6d39a23d36b946a9f44611c804aec4f1379d6113528672b1ac3077397a'

[Sources.linux-arm64]
[Sources.linux-arm64.Checksum]
Value = '4471d429605f9a957b2b7c9fc4090b1961e1480fca52824b2f381c6dbc75f717'

[Sources.darwin-amd64]
Archive = 'hugo_{{- .Version -}}_darwin-universal.{{- .Format -}}'
[Sources.darwin-amd64.Checksum]
Value = '02fd83c32ca84eb500bb2fd32f6c5a33d9c922d61a31ea3018aecc641fea3e46'

[Sources.darwin-arm64]
Archive = 'hugo_{{- .Version -}}_darwin-universal.{{- .Format -}}'
[Sources.darwin-arm64.Checksum]
Value = '02fd83c32ca84eb500bb2fd32f6c5a33d9c922d61a31ea3018aecc641fea3e46'

[Sources.netbsd-amd64]
[Sources.netbsd-amd64.Checksum]
Value = '8ededc6059b52aad827a61ec2fbabadaba6017c6ab75791bd097c39704518257'

[Sources.openbsd-amd64]
[Sources.openbsd-amd64.Checksum]
Value = '1d06a77584cc0ddabd0f68f7a2a5f19abbe621709be29c7bcd991a3a02838071'

[Sources.windows-amd64]
Format = 'zip'
[Sources.windows-amd64.Checksum]
Value = '0e035f619a59c174a9aa1da3f82c8539df94d0af6d0bddd77af803f26add1933'

[Sources.windows-arm64]
Format = 'zip'
[Sources.windows-arm64.Checksum]
Value = 'cb745d1e0d38d6c41f5f459b014de0343ee415d202ced6c1e50379ae8ac5a10e'




[[CMD]]
Name = 'Delete Target for Installation'
Type = 'delete-recursive-quiet'
Condition = ['all-all']
Source = '{{- .BinDir -}}/hugo'

[[CMD]]
Name = 'Install Go Hugo'
Type = 'move'
Condition = [ 'all-all' ]
Source = '{{- .WorkingDir -}}/hugo'
Target = '{{- .BinDir -}}/hugo'




# Config file for localized filesystem initialization.
[Config]
linux = """
#!/bin/bash

_name="hugo"

case $1 in
--stop)
	;;
*)
	if [ ! -z "$(type -p "$_name")" ]; then
		1>&2 printf "[ DONE  ] '$_name' is available.\\n"
	else
		1>&2 printf "[ ERROR ] '$_name' is missing.\\n"
	fi
	;;
esac
"""
