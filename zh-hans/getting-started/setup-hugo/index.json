{"内容":[{"URL":[],"代码":null,"多元像":{},"大纲":"在成功完毕这个指南领导后，您会学到:\n（1）如何设置Hugo的Git代码库、\n（2）如何下载和设置hestiaHUGO、\n（3）如何开动Hugo的服务器来编制网页内容和\n（4）如何在行程中运用Git。\n","标题":"学习目标","深度":2},{"URL":[],"代码":"1. 您是不可能运用Markdown或者如Hugo建议通过他们的Shortcode来把Markdown怪物化。\n\n2. 为了确保与Go的容易配合，hestiaHUGO设计是编写（拥有Hugo的partial功能）Go\n   Template符合的HTML代码。\n\n3. HTML、CSS和JS统统被统一为一体：**WEB**。我们绝不会如其他CSS和JS的构架把他们\n   分开。\n\n4. 我们还是无条件地遵守非常不一致的最终用户的浏览器渲染规则：\n   (HTML而已 ➔ HTML+CSS而已（如：JS阻止器）➔ HTML+CSS+JS)。\n\n5. 所有的网页布局供应是UI界面元件层的。 每个元件都会有它自己的Web格式（HTML,\n   CSS, CSS Variables, JS）。\n\n6. 我们**编译**网页而不是呈现而已。每面网页是自行包含的。\n\n7. 在网页布局层，我们给HTML+CSS渲染规则优先特别是运用那非常奥妙的CSS变化值。\n\n8. 我们是为了支持各种语言和运用干净数据而非常数据优先的。我们做到自己供应自己的\n   数据干净话的功能给您统一运用的境界了。\n","多元像":{},"大纲":"有如其他的Hugo模型，hestiaHUGO是有通过它的独特方式来供应界面设计。但是呢，不如其\n他的Hugo模型，hestiaHUGO是有它自己的数据处理器而很少运用Hugo本生供应的用具（我们\n只用它的partial功能和图画处理器功能而已）。我们这么做主要原因是Hugo在它的历史里\n有太多的不一致现象。经历过它带来的痛苦，身为ZORALab的我们绝对不会在重复我们的错\n误。加上我们一路的网络开发的经历，我们也在别的领域深深的学上很多不同的哲学。如此\n以来，在还没决定要用hestiaHUGO前，您一定要接受以下不折不扣的分别：\n","标题":"hestiaHUGO方式","深度":2},{"URL":[{"URL":"https://hestia.zoralab.com/zh-hans/releases/","名字":"下载购物中心"}],"代码":"","多元像":{},"大纲":"我们先在ZORALab赫斯提亚下载购物中心里下载最新的hesitaHUGO包装。切记：记得只需要\n寻找：’hestiaHUGO‘。\n","标题":"下载最新的包装","深度":2},{"URL":[],"代码":"# 在 UNIX 系统 (LINUX / MACOS)\n# ----------------------------\n$ sha512sum hestiaHUGO-vNNNN.zip\n...\n[HASHED_VALUE]\n\n\n\n\n# 在 WINDOWS 系统\n# ---------------\n$ certutil -hashfile hestiaHUGO-vNNNN.zip sha512\n...\nSHA512 hash of hestiaHUGO-vNNNN.zip:\n[HASHED_VALUE]\n","多元像":{},"大纲":"在还没有开始前，为了安全，我们建议您检查包装完整性。这里有2个方式：GPG或SHASUM。\n在这个指南里，我们在以下的片段运用SHASUM来检查包装。当完整执行SHASUM命令后您将会\n得到一份HASHED_VALUE的数据。您的唯一任务就是要确定这份HASHED_VALUE是和下载购物中\n心所展现数据是100%相同的。\n","标题":"检查包装完整性","深度":2},{"URL":[],"代码":"DemoHestia/\n└── sites/\n    └── themes/\n        └── hestiaHUGO/\n            ├── config/\n            ├── server.cmd\n            ├── ...\n            └── ... 其他内容 ...\n","多元像":{},"大纲":"当您有了一份检查成功的包装在手时，现在就是时候设置Git代码库。第一步：制造和开始您\n的Git代码库的文件夹（在这整个指南里，我们称它为“DemoHestia”）。在这文件夹里，你再\n制造新的文件夹（我们推荐名为“sites”）。然后在这最里面的文件夹里制造新的文件夹叫\n“themes”。最后呢，您就在这个themes的文件夹里打开hestiaHUGO的包装。您的成功文件夹\n有如以下：\n","标题":"设置Git代码库","深度":2},{"URL":[],"代码":"DemoHestia/\n└── sites/\n    ├── server.cmd\n    │\n    ├── config/\n    │   ├── _default/\n    │   │   ├── caches.toml\n    │   │   └── config.toml\n    │   ├── development/\n    │   │   └── config.toml\n    │   └── production/\n    │       └── config.toml\n    │\n    └── themes/\n        └── hestiaHUGO/\n            └── ... 所有内容文件 ...\n","多元像":{},"大纲":"由于hestiaHUGO的引擎的复杂性，hestiaHUGO有运出在自己的文件夹里同时运出config/文\n件夹和'server.cmd'。您需要把它移出来放入sites/文件夹里。\n最后成果有如：\n","标题":"设置hugo系统文件夹","深度":2},{"URL":[],"代码":"DemoHestia/\n└── sites/\n    ├── ...\n    │\n    ├── config/\n    │   ├── _default/\n    │   │   ├── ...\n    │   │   └── config.toml\n    │   │\n    │   └── ...\n    │\n    └── ...\n\n           ⤋\n\n# CONFIGURE THESE DATA\n# ====================\nbaseURL = \"https://hestia.zoralab.com\"\ntheme = [\n        \"hestiaHUGO\",\n]\ntimeout = '10m'\n\narchetypeDir = \"archetypes\"\ncontentDir = \"content\"\nassetDir = \"assets\"\ndataDir = \"data\"\nstaticDir = [\n        \"static\",\n]\nlayoutDir = \"layouts\"\nthemesDir = \"..\"\npublishDir = \"public\"\ni18nDir = \"i18n\"\n\n\n# ╔════════════╗\n# ║!!  STOP  !!║\n# ╚════════════╝\n!!! 那就够了。别改任何以下的数据。您可能会搞炸hestiaHUGO的。 !!!\n...\n","多元像":{},"大纲":"如今所有重要的文件已经归处，现在是时候配置Hugo了。大致上，您只需要配置\n'__sites/config/_default/config.toml'文件的第一部分就行了。其他的部分就跟着附加\n的注意文字行使就行了。没错的话，您只需要配置'baseURL'为您想要的域名URL地址就够了\n。有空的话，您可以参考Hugo配置指南手册来了解每个数码值的意义。\n","标题":"配置Hugo","深度":2},{"URL":[],"代码":"$ cd sites/         # if you haven't do so\n$ ./server.cmd\n","多元像":{},"大纲":"如今一却已经设置和配置好了，我们可以开始开动服务器引擎来测试用户。\n由于Hugo的有不定的症状，我们建议运用我们的server.cmd文件来开动它。\n虽然您可以运用Hugo的指令来开动，**我们坚持建议您别这么做**。\n您可以通过那文件来了解更多。\n","标题":"开动Hugo服务器","深度":2},{"URL":[],"代码":"","多元像":{},"大纲":"当服务器安全无损的运行时，您可以观光展览出的URL链接地址。如今我们还未建设任何网\n页内容，您也只能看到一面白页或一直被送去语言性的404网页。在这阶段呢，您已经有一\n个含有hestiaHUGO可用的Hugo代码库了！\n","标题":"观光服务器的URL链接地址","深度":2},{"URL":[],"代码":"$ git add .\n$ git commit -s\n\n----\n根点: 为网站设计需求设置和配置hugo。\n\n这里有网站设计需求的Hugo需求。如此，我们也必须开始它的设置和配置\n工作。那就开始吧。\n\n这个代码补丁是为网站设计需求设置和配置hugo。\n\n\nSigned-off-by: 周健豪 ❬hollowaykeanho@gmail.com❭\n----\n\n$ git push\n","多元像":{},"大纲":"在还没开始编制任何网页内容前，我们建议您Git Commit掉这个代码库以防未来需要的时间\n穿越会点。有一件事必须搞清楚：把hestiaHUGO一起Git Commit。如今的hestiaHUGO不只是\n供应UI用具了。它其实还是个数据引擎来稳重化您的Hugo。所以呢，把它分开是会不安全\n的。\n","标题":"Git Commit","深度":2},{"URL":[],"代码":"DemoHestia/\n└── sites/\n    │\n    ├── ...\n    │\n    └── themes/\n        └── hestiaHUGO/     🡨 只需更新这个文件夹就行了\n            └── ...\n","多元像":{},"大纲":"在以后如果有需要更新hestiaHUGO，您只需更换那'themes/hestiaHUGO'文件夹就可以了。\nHugo的从新配置如果下载中心手册没有列出是不需要的。切记：更新引擎有时会不小心破坏\n您所建设的边缘案例内容设计的。所以呢，您还是预备好时间检查所有的内容完整性。在这\n儿，我们也尽量会后向兼容。\n","标题":"有关更新hestiaHUGO","深度":2},{"URL":[{"URL":"https://hestia.zoralab.com/zh-hans/getting-started/create-basic-and-placeholder-hugo-pages/","名字":"建设简单和占位符性的Hugo网页"}],"代码":"","多元像":{},"大纲":"现在hestiaHUGO已经设好了，下一步是建设简单的网页。以下是下一步的URL链接：\n","标题":"下一步？","深度":2}],"大纲":"整个行程最早的步骤就是设置拥有hestiaHUGO的Hugo啦。 一个一步一步编好的ZORALab赫斯提亚Hugo从新设置指南。","标题":"设置拥有hestiaHUGO的Hugo"}