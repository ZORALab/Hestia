{{- /*
Page's JSON Output Prime Control

This file is your JSON output file (index.html). Hugo's and Go's template
processors are available at your disposal in case of mathematical or logical
algorithms development.
*/ -}}
{{- /* prepare variables for function */ -}}
{{- $SECTIONS := slice "Purposes" "Designs" "Constants" "Variables" "Functions" "Types" -}}
{{- $Page := . -}}
{{- $dataList := dict -}}
{{- $i18n := index .Data.Store.Specs.I18n .Languages.Current.ID -}}
{{- $datastore := false -}}
{{- $dataset := false -}}
{{- $lang := dict -}}
{{- $list := slice -}}
{{- $subList := slice -}}
{{- $URLList := slice -}}
{{- $data := dict -}}
{{- $ret := false -}}




{{- /* obtain dataset */ -}}
{{- $datastore = $Page.Data.Store.Specs -}}
{{- if $Page.Data.Page.Dataset.Path -}}
	{{- range $i, $v := (split $Page.Data.Page.Dataset.Path ".") -}}
		{{- if $datastore -}}
			{{- $datastore = index $datastore $v -}}
		{{- end -}}
	{{- end -}}
{{- end -}}




{{- /* execute function */ -}}
{{- $dataList = merge $dataList (dict
	$i18n.Labels.Title .Titles.Page
	$i18n.Labels.Description
		(printf "%s %s" .Descriptions.Page.Pitch .Descriptions.Page.Summary)
) -}}




{{- range $unused, $type := $SECTIONS -}}
	{{- $lang = index $i18n $type -}}
	{{- $dataset = default dict (index $datastore $type) -}}
	{{- $dataset = index $dataset $Page.Languages.Current.ID -}}


	{{- /* construct dataset  */ -}}
	{{- $list = slice -}}
	{{- range $i, $v := $dataset.Content -}}
		{{- $ret = "" -}}
		{{- if $v.Code -}}
			{{- $ret = $v.Code -}}
		{{- end -}}


		{{- $URLList = slice -}}
		{{- range $j , $w := $v.URL -}}
			{{- if and (not $w.Value) (not $w.Label) -}}
				{{- continue -}}
			{{- end -}}

			{{- $ret = merge $Page (dict "Input" (dict "Data" $w.Value)) -}}
			{{- $ret = partial "hestiaURL/Sanitize" $ret }}
			{{- $URLList = append (dict $w.Label (string $ret.Output)) $URLList -}}
		{{- end -}}


		{{- $ret = dict -}}
		{{- if $v.Image -}}
			{{- $ret = merge $Page (dict "Input" (dict "Data" $v.Image)) -}}
			{{- $ret = partial "hestiaMEDIA/Sanitize" $ret -}}
			{{- $ret = $ret.Output -}}
		{{- end -}}


		{{- $data = dict
			$i18n.Labels.Level $v.Level
			$i18n.Labels.Title $v.Title
			$i18n.Labels.Description $v.Plain
			$i18n.Labels.Code $v.Code
			$i18n.Labels.URL $URLList
			$i18n.Labels.Image $ret
		-}}


		{{- $list = append $data $list -}}
	{{- end -}}
	{{- $dataList = merge $dataList (dict $lang.Label $list) -}}
{{- end -}}




{{- /* construct .Catalog dataset  */ -}}
{{- $list = slice -}}
{{- range $i, $v := .Nav.Children -}}
	{{- $list = append (dict
		$i18n.Labels.Title $v.Titles.Page
		$i18n.Labels.Description $v.Titles.Description
		$i18n.Catalog.CTA $v.URL.Current.Absolute
	) $list -}}
{{- end -}}
{{- $dataList = merge $dataList (dict $i18n.Catalog.Label $list) -}}




{{- /* render output */ -}}
{{- jsonify $dataList -}}
