# PAGE METADATA
# =============
# Date fields.
#
# NOTE:
#   1. You can generate date easily on linux using '$ date' command.
#   2. If date field is left blank, the current time shall be used instead.
#   3. Date should ONLY comply to this pattern when manually constructed:
#                    Thu 21 Jul 2022 14:27:39 PM +08
[Date]
Created   = 'Sat 05 Mar 2023 11:22:21 AM +08'
Published = 'Sat 05 Mar 2023 11:22:21 AM +08'




# Content fields.
# NOTE:
#   1. For .Title, Hestia's string processing using page variables are allowed
#      and only limited to .Titles sub-fields.
#   2. For .Keywords, Hestia's string processing using page variables are
#      allowed but strongly discouraged.
[Content]
Title = 'Create Basic and Placeholder Hugo Pages'
Keywords = [
	'Create Basic and Placeholder Hugo Pages',
	'Web',
	'Tech',
	'PWA',
	'WASM',
	'hestiaHUGO',
	'Software Libraries',
	'Hugo',
	'ZORALab',
	"ZORALab's Hestia",
]




# Description fields.
# NOTE:
#   1. Hestia's string processing using page variables are allowed.
#   2. The .Description.Pitch is at maximum 160 characters.
#   3. The .Description.Summary is at maximum of 250 characters.
#   4. All fields shall have their whitespace cleansed during the processing.
[Description]
Pitch = '''
Through creating simple pages, we learn how hestiaHUGO operates.
'''
Summary = '''
A step-by-step guide for hestiaHUGO â€” ZORALab's Hestia Hugo module.
'''




# Redirect fields.
# NOTE:
#   1. Hestia's URL processing is allowed for .URL field.
#   2. .Delay timing sets the delay time before redirect. Setting to '0' means
#      an immediate redirect is requested.
#   3. Redirect is only available if .Enabled is set to 'true'.
#   4. Redirect.Language is to redirect the current page to its
#      language-specific page when Javascript is made available on client side
#      or fallback to default language.
[Redirect]
Delay = 0 # second
URL = ''
Enabled = false

[Redirect.Language]
Enabled = false




# Content Files' Sourcing Location
# NOTE:
#   1. To denote where are the content sources.
#   2. If you're sourcing from assets directory, prefix 'assets/'.
#   3. If you're sourcing from layouts directory, prefix 'layouts/'.
#   2. If you're sourcing from static directory, prefix 'static/'.
#   3. If you're sourcing from partial directory, prefix 'layouts/partials/'.
[Sources]
HTML = 'layouts/content/getting-started/common/index.html'
JSON = 'layouts/content/getting-started/common/index.json'
CSS = 'layouts/content/getting-started/common/index.css'
JS = 'layouts/content/getting-started/common/index.js'
LDJSON = '__content.hestiaLDJSON'
Contributors = '__contributors.toml'
Thumbnails = '__thumbnails.toml'
Languages = '__languages.toml'
Assets = 'layouts/content/getting-started/common/assets.toml'
Components = 'layouts/content/getting-started/common/components.toml'




# Data fields.
# NOTE:
#   1. List only the page-level data files. It can be in any of the following
#      formats: '.json', '.toml', or '.yaml'.
#   2. Hestia string processing is available and shall be processed prior to
#      dataset transformation.
#   3. Sequences of the .Data array dictates sequences of loading and overriding
#      (the latter shall overwrite the former for the same data fields).
#   4. The final processed dataset shall be served as main data content in
#      supported output format (e.g. index.json).
#   5. Missing data file shall be ignored.
#   6. To add more data files, simply duplicate and add more .Data array entry.
#      Example:
#                             [[data]]
#                             Filename = 'file1.json'
#
#                             [[data]]
#                             Filename = 'file2.toml'
[[Data]]
Filename = '__data.toml'

[[Data]]
Filename = '__i18n.toml'
