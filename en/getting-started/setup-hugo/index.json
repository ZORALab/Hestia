{"Content":[{"Code":"","Description":"At the end of this tutorial, you will learn:\n(1) How to setup Hugo compatible Git Repository; AND\n(2) How to download and setup hestiaHUGO; AND\n(3) How to start a hugo server for development; AND\n(4) How to use git along the way.\n","Level":2,"Media":{},"Title":"Learning Objectives","URL":[]},{"Code":"1. You won't be using Markdown; or even frankenstiening it with Hugo's\n   shortcode like Hugo recommended.\n\n2. Design strongly for writing HTML and Go template functions (equipped with\n   Hugo partial functions) for maximum portabilities.\n\n3. HTML, CSS, and JS are treated as 1 single format: **WEB**. We do not split\n   them like most CSS and JS frameworks did.\n\n4. We are still complying to the browser's end-user rendering degredation rule\n   (HTML-only ➔ HTML+CSS only (e.g. JS blocker) ➔ HTML+CSS+JS), carrying no\n   assumption of visitors' browsing nature.\n\n5. All page layouts are supplied at UI component level, each with its own web\n   formats (HTML, CSS, CSS Variables, JS).\n\n6. We **COMPILE** pages; not just rendering. Each page is contained on its own.\n\n7. At page layout level, we prioritizes HTML+CSS approach, especially when the\n   very powerful CSS variables is made available.\n\n8. We are extremely data-driven due to multiple languages support and even\n   supply our own data type+value sanitization functions.\n","Description":"Like any Hugo theme, hestiaHUGO supplies UI in its very unique way. However,\nunlike any other themes, hestiaHUGO comes with its own data processor system and\nrarely use most of Hugo features except its partial functions and image\nprocessing functions. The main reason is because Hugo has a lot of output\ninconsistences throughout its history. ZORALab been there the hard way and will\nnever make the same mistake twice. Along the web development journey, we picked\na lot of different lessons and values along the way. So, before you decide to\nmove forward, let's be clear about some notable non-compromising differences:\n","Level":2,"Media":{},"Title":"Understanding The hestiaHUGO Way","URL":[]},{"Code":"","Description":"Let's start by downloading the latest package from the ZORALab's Hestia releases\nportal in its offical website via the link below. Keep in mind that you're\nlooking for 'hestiaHUGO'.\n","Level":2,"Media":{},"Title":"Download the Latest Package","URL":[{"Label":"Releases Portal","URL":"https://hestia.zoralab.com/en/releases/"}]},{"Code":"# IN UNIX OS (LINUX / MACOS)\n# --------------------------\n$ sha512sum hestiaHUGO-vNNNN.zip\n...\n[HASHED_VALUE]\n\n\n\n\n# IN WINDOWS OS\n# -------------\n$ certutil -hashfile hestiaHUGO-vNNNN.zip sha512\n...\nSHA512 hash of hestiaHUGO-vNNNN.zip:\n[HASHED_VALUE]\n","Description":"To make sure you had downloaded a proper and correct package, we recommend you\nto check the package integrity before use. The are 2 ways to do this: GPG or\nSHASUM. In this tutorial, we will be using SHASUM as shown in the following code\nsnippet. This should generate a HASHED_VALUE mathematically. Your job is to make\nsure the HASHED_VALUE is 100% exactly the same as displayed at the releases\nportal.\n","Level":2,"Media":{"Autoplay":false,"CORS":"anonymous","Control":false,"Decorative":false,"Design":"","Height":600,"Inline":false,"Loading":"lazy","Loop":false,"Mute":false,"Name":"Screenshot of Comparing SHASUM Values","Preload":"","Relationship":"","Sizes":"600x600","Sources":{"0":{"Descriptor":"1x","Media":"(min-width: 600px)","Type":"image/avif","URL":{"Scheme":"https","Opaque":"","User":null,"Host":"hestia.zoralab.com","Path":"/img/getting-started/setup-hugo/check-package-integrity-600x600.avif","RawPath":"","OmitHost":false,"ForceQuery":false,"RawQuery":"","Fragment":"","RawFragment":""}},"1":{"Descriptor":"1x","Media":"(min-width: 600px)","Type":"image/webp","URL":{"Scheme":"https","Opaque":"","User":null,"Host":"hestia.zoralab.com","Path":"/img/getting-started/setup-hugo/check-package-integrity-600x600.webp","RawPath":"","OmitHost":false,"ForceQuery":false,"RawQuery":"","Fragment":"","RawFragment":""}},"2":{"Descriptor":"1x","Media":"(min-width: 600px)","Type":"image/jpeg","URL":{"Scheme":"https","Opaque":"","User":null,"Host":"hestia.zoralab.com","Path":"/img/getting-started/setup-hugo/check-package-integrity-600x600.jpg","RawPath":"","OmitHost":false,"ForceQuery":false,"RawQuery":"","Fragment":"","RawFragment":""}},"3":{"Descriptor":"1x","Media":"(min-width: 300px)","Type":"image/avif","URL":{"Scheme":"https","Opaque":"","User":null,"Host":"hestia.zoralab.com","Path":"/img/getting-started/setup-hugo/check-package-integrity-400x400.avif","RawPath":"","OmitHost":false,"ForceQuery":false,"RawQuery":"","Fragment":"","RawFragment":""}},"4":{"Descriptor":"1x","Media":"(min-width: 300px)","Type":"image/webp","URL":{"Scheme":"https","Opaque":"","User":null,"Host":"hestia.zoralab.com","Path":"/img/getting-started/setup-hugo/check-package-integrity-400x400.webp","RawPath":"","OmitHost":false,"ForceQuery":false,"RawQuery":"","Fragment":"","RawFragment":""}},"5":{"Descriptor":"1x","Media":"(min-width: 300px)","Type":"image/jpeg","URL":{"Scheme":"https","Opaque":"","User":null,"Host":"hestia.zoralab.com","Path":"/img/getting-started/setup-hugo/check-package-integrity-400x400.jpg","RawPath":"","OmitHost":false,"ForceQuery":false,"RawQuery":"","Fragment":"","RawFragment":""}},"6":{"Descriptor":"1x","Media":"(max-width: 299px)","Type":"image/avif","URL":{"Scheme":"https","Opaque":"","User":null,"Host":"hestia.zoralab.com","Path":"/img/getting-started/setup-hugo/check-package-integrity-220x220.avif","RawPath":"","OmitHost":false,"ForceQuery":false,"RawQuery":"","Fragment":"","RawFragment":""}},"7":{"Descriptor":"1x","Media":"(max-width: 299px)","Type":"image/webp","URL":{"Scheme":"https","Opaque":"","User":null,"Host":"hestia.zoralab.com","Path":"/img/getting-started/setup-hugo/check-package-integrity-220x220.webp","RawPath":"","OmitHost":false,"ForceQuery":false,"RawQuery":"","Fragment":"","RawFragment":""}},"8":{"Descriptor":"1x","Media":"(max-width: 299px)","Type":"image/jpeg","URL":{"Scheme":"https","Opaque":"","User":null,"Host":"hestia.zoralab.com","Path":"/img/getting-started/setup-hugo/check-package-integrity-220x220.jpg","RawPath":"","OmitHost":false,"ForceQuery":false,"RawQuery":"","Fragment":"","RawFragment":""}}},"Tracks":{},"Width":600},"Title":"Check the Package Integrity","URL":[]},{"Code":"DemoHestia/\n└── sites/\n    └── themes/\n        └── hestiaHUGO/\n            ├── config/\n            ├── server.cmd\n            ├── ...\n            └── ... all other content ...\n","Description":"Now that you the package ready, it's time to setup your git repository. Firstly,\ncreate and initialize your Git repo directory (for this entire tutorial, we're\ncalling it 'DemoHestia'). In it, you can create your hugo directory (by\ndefault, we recommend 'sites'). Then, proceed to create a 'themes' directory\ninside it. Once done, unzip the hestiaHUGO package into the 'themes' directory.\nThe results should be something as such:\n","Level":2,"Media":{},"Title":"Setup Git Repository","URL":[]},{"Code":"DemoHestia/\n└── sites/\n    ├── server.cmd\n    │\n    ├── config/\n    │   ├── _default/\n    │   │   ├── caches.toml\n    │   │   └── config.toml\n    │   ├── development/\n    │   │   └── config.toml\n    │   └── production/\n    │       └── config.toml\n    │\n    └── themes/\n        └── hestiaHUGO/\n            └── ... all theme content ...\n","Description":"Due to the engine design complexities, hestiaHUGO ships its 'config/'\ndirectory and a Hugo server 'server.cmd' starter script by default inside the\n'hestiaHUGO' theme directory as part of the package.\nYou will have to move it out to the hugo directory ('sites/') in order to\nproperly use it. The result should be something as such:\n","Level":2,"Media":{},"Title":"Setup Hugo Config Directory","URL":[]},{"Code":"DemoHestia/\n└── sites/\n    ├── ...\n    │\n    ├── config/\n    │   ├── _default/\n    │   │   ├── ...\n    │   │   └── config.toml\n    │   │\n    │   └── ...\n    │\n    └── ...\n\n           ⤋\n\n# CONFIGURE THESE DATA\n# ====================\nbaseURL = \"https://hestia.zoralab.com\"\ntheme = [\n        \"hestiaHUGO\",\n]\ntimeout = '10m'\n\narchetypeDir = \"archetypes\"\ncontentDir = \"content\"\nassetDir = \"assets\"\ndataDir = \"data\"\nstaticDir = [\n        \"static\",\n]\nlayoutDir = \"layouts\"\nthemesDir = \"..\"\npublishDir = \"public\"\ni18nDir = \"i18n\"\n\n\n# ╔════════════╗\n# ║!!  STOP  !!║\n# ╚════════════╝\n!!! That's it. Don't go beyond here. You might break hestiaHUGO. !!!\n...\n","Description":"With Hugo's critical files in-place, it's time to configure Hugo. Generally\nspeaking, you only need to edit the 1st section of the\n'__sites/config/_default/config.toml' file. The rest are as it is as\nnoted by the comments. You would want to setup **baseURL** to the\noutput base URL you're planning to publish and that's it. You may refer to\nHugo's config manual in the link below to learn more about each fields.\n","Level":2,"Media":{},"Title":"Configure Hugo","URL":[]},{"Code":"$ cd sites/         # if you haven't do so\n$ ./server.cmd\n","Description":"With everything setup ready, it's time to start a server. Due to Hugo's\ninconsistency, hestiaHUGO does its optimizations and workaround wrapped under\na single 'server.cmd' script. While you can start the server as\nguided by Hugo, we **strongly discourage you to do so**. You can explore and\nread the script we did to learn more.\n","Level":2,"Media":{},"Title":"Start Hugo Server","URL":[]},{"Code":"","Description":"With the server running properly, you can visit the website using your browser\nin the computer. Since we have not build anything, you should expect a blank\npage or a page that keeps on redirecting to the language-specific 404 pages.\nAt this stage, you got a working Hugo repo with hestiaHUGO set nicely.\n","Level":2,"Media":{},"Title":"Visit the Preview URL Site","URL":[]},{"Code":"$ git add .\n$ git commit -s\n\n----\nroot: initialized hugo for site creation.\n\nThere is a need to initialize a hugo repository for building\nthe static website. Hence, we have to start the efforts before\nbuilding any web content. Let's do this.\n\nThis patch is created to initialize hugo in the repository.\n\n\nSigned-off-by: Smith, John ❬john.smith@email.com❭\n----\n\n$ git push\n","Description":"Before starting to create any content, we advise you to git commit at this point\nin case of future revert needs. Now let's be clear: commit the hestiaHUGO theme\ntogether as opposed to many folks said. This is a rendering UI engine which is\nmore than just supplying UI codes. It's not safe to detach it from your Hugo.\n","Level":2,"Media":{},"Title":"Git Commit","URL":[]},{"Code":"DemoHestia/\n└── sites/\n    │\n    ├── ...\n    │\n    └── themes/\n        └── hestiaHUGO/     🡨 just replace this directory\n            └── ...\n","Description":"In the future, in case you need to update the hestiaHUGO, you just need to\nreplace your 'themes/hestiaHUGO' directory with the updated package. Hugo\nreconfiguration is not required unless the release note specify it. Remember\nthat updating the engine may break your edge-cases inline customization so while\nwe try not to break backward compatibilty, you should allocate some times\nto audit all your content pages' UI are updated with the latest API calls.\n","Level":2,"Media":{},"Title":"About Updating hestiaHUGO","URL":[]},{"Code":"","Description":"Now that we had completed the hestiaHUGO setup, the next step is to create a\nsimple page. Here's the URL for the next step.\n","Level":2,"Media":{},"Title":"What's Next?","URL":[{"Label":"Create Basic and Placeholder Hugo Pages","URL":"https://hestia.zoralab.com/en/getting-started/create-basic-and-placeholder-hugo-pages/"}]}],"Description":"The very beginning of to setup Hugo Git repository with hestiaHUGO. A step-by-step guide ZORALab's Hestia Hugo module from scratch.","Title":"Setup Hugo with hestiaHUGO - ZORALab's Hestia Module"}